[{"path":"https://milanwiedemann.github.io/lcsm/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 lcsm authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://milanwiedemann.github.io/lcsm/articles/lcsm-parameters.html","id":"univariate-lcsm","dir":"Articles","previous_headings":"Overview of estimated LCSM parameters","what":"Univariate LCSM","title":"LCSM Parameters","text":"Depending specified model, following parameters can estimated univariate LCSMs:","code":""},{"path":"https://milanwiedemann.github.io/lcsm/articles/lcsm-parameters.html","id":"bivariate-lcsms","dir":"Articles","previous_headings":"Overview of estimated LCSM parameters","what":"Bivariate LCSMs","title":"LCSM Parameters","text":"bivariate LCSMs, estimated parameters can categorised (1) Construct X, (2) Construct Y, (3) Coupling X Y.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/articles/v0-longitudinal-plots.html","id":"prepare-data","dir":"Articles","previous_headings":"","what":"Prepare data","title":"Visualise longitudinal data","text":"working repeated measures like create vector variables don’t type names , really needed everything also work without . repeated measurements need “long” format using ggplot2 plotting. Note different data structure needed lavaan, data can’t just used plotting without restructuring - lavaan expects data “wide” format. ’ll show transform data anyway plotting function plot_trajectories() limited plots may appropriate. Fortunately, relatively straightforward , favourite function pivot_longer() tidyr package. Next, get correct order repeated measures time variable needs ordered correct order. R know order numbers variable actually numeric. ’re using variable names also include letters R might get confused get order wrong. Imagine four repeated measurements, week 1 3 week 10 following variable names: w1, w2, w3, w10. R get order wrong thinks w1 followed w10 w2 w3. avoid couple options, usually one two: Create factor original variable names using build factor() function base R Extracting number string creating factor (see example ) data manipulations necessary plotting longitudinal data R plot_trajectories() function package transformation automatically background.","code":"# Create a vector of variable names x_var_list <- c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\", \"x6\")  # Or simply use the paste function and R might work too paste0(\"x\", 1:6) #> [1] \"x1\" \"x2\" \"x3\" \"x4\" \"x5\" \"x6\" # Create long data set data_long <- data_bi_lcsm %>%    select(\"id\", all_of(x_var_list)) %>%    # Pivot data long   pivot_longer(cols = all_of(x_var_list), names_to = \"time\", values_to = \"value\") %>%    mutate(     # Extract number from time variable     time = str_extract(time, \"\\\\d+\"),     # At the moment the numbers in the time are 'characters'     # So here it gets transformed to a numeric value     time = factor(as.numeric(time))     )"},{"path":"https://milanwiedemann.github.io/lcsm/articles/v0-longitudinal-plots.html","id":"violin-plots","dir":"Articles","previous_headings":"","what":"Violin plots","title":"Visualise longitudinal data","text":"Similar visualisations communicate data open way developed example Allen et al. (2019) Langen (2020).","code":"# Create violin plot  with outliers in colour blue # Also add boxplot ggplot(data_long, aes(time, value)) +   geom_violin() +   geom_boxplot(width = 0.1, outlier.colour = \"blue\") +   theme_classic() #> Warning: Removed 154 rows containing non-finite values #> (`stat_ydensity()`). #> Warning: Removed 154 rows containing non-finite values #> (`stat_boxplot()`)."},{"path":"https://milanwiedemann.github.io/lcsm/articles/v0-longitudinal-plots.html","id":"longitudinal-plots","dir":"Articles","previous_headings":"","what":"Longitudinal plots","title":"Visualise longitudinal data","text":"violin plot focuses overall distribution, following plots highlight individual trajectories case data. Longitudinal data can visualised using plot_trajectories() function lcsm package. 1.8% data visualised using argument random_sample_frac = 0.018. consecutive measures connected lines specified connect_missing = FALSE.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/articles/v0-longitudinal-plots.html","id":"overlaid-individual-trajectories","dir":"Articles","previous_headings":"Longitudinal plots","what":"Overlaid individual trajectories","title":"Visualise longitudinal data","text":"","code":"# Create longitudinal plot for construct x # Select ransom 1.8% of the sample plot_trajectories(data = data_bi_lcsm,                   id_var = \"id\",                    var_list = x_var_list,                   xlab = \"Time\", ylab = \"Value\",                   connect_missing = FALSE,                    random_sample_frac = 0.018,                    title_n = TRUE) #> Warning: Removed 1 row containing missing values (`geom_line()`). #> Warning: Removed 4 rows containing missing values (`geom_point()`)."},{"path":"https://milanwiedemann.github.io/lcsm/articles/v0-longitudinal-plots.html","id":"separate-individual-trajectories","dir":"Articles","previous_headings":"Longitudinal plots","what":"Separate individual trajectories","title":"Visualise longitudinal data","text":"","code":"# Create plot for construct x # Add facet_wrap() function from ggplot2 plot_trajectories(data = data_bi_lcsm,                   id_var = \"id\",                    var_list = x_var_list,                   xlab = \"Time\", ylab = \"Value\",                   connect_missing = F,                    random_sample_frac = 0.018,                    title_n = T) +   facet_wrap(~id) #> Warning: Removed 1 row containing missing values (`geom_line()`). #> Warning: Removed 4 rows containing missing values (`geom_point()`)."},{"path":[]},{"path":"https://milanwiedemann.github.io/lcsm/articles/v1-lavaan-syntax.html","id":"univariate-lcsm-syntax","dir":"Articles","previous_headings":"","what":"Univariate LCSM syntax","title":"Generate lavaan syntax for latent change score models","text":"example shows specify generic univariate latent change score model using function specify_uni_lcsm().","code":"uni_lcsm_syntax <- specify_uni_lcsm(timepoints = 5,                                     var = \"x\",                                       change_letter = \"g\",                                     model = list(alpha_constant = TRUE,                                                   beta = TRUE,                                                   phi = TRUE)) # To get a readable output use cat() function cat(uni_lcsm_syntax) #> # Specify latent true scores  #> lx1 =~ 1 * x1  #> lx2 =~ 1 * x2  #> lx3 =~ 1 * x3  #> lx4 =~ 1 * x4  #> lx5 =~ 1 * x5  #> # Specify mean of latent true scores  #> lx1 ~ gamma_lx1 * 1  #> lx2 ~ 0 * 1  #> lx3 ~ 0 * 1  #> lx4 ~ 0 * 1  #> lx5 ~ 0 * 1  #> # Specify variance of latent true scores  #> lx1 ~~ sigma2_lx1 * lx1  #> lx2 ~~ 0 * lx2  #> lx3 ~~ 0 * lx3  #> lx4 ~~ 0 * lx4  #> lx5 ~~ 0 * lx5  #> # Specify intercept of obseved scores  #> x1 ~ 0 * 1  #> x2 ~ 0 * 1  #> x3 ~ 0 * 1  #> x4 ~ 0 * 1  #> x5 ~ 0 * 1  #> # Specify variance of observed scores  #> x1 ~~ sigma2_ux * x1  #> x2 ~~ sigma2_ux * x2  #> x3 ~~ sigma2_ux * x3  #> x4 ~~ sigma2_ux * x4  #> x5 ~~ sigma2_ux * x5  #> # Specify autoregressions of latent variables  #> lx2 ~ 1 * lx1  #> lx3 ~ 1 * lx2  #> lx4 ~ 1 * lx3  #> lx5 ~ 1 * lx4  #> # Specify latent change scores  #> dx2 =~ 1 * lx2  #> dx3 =~ 1 * lx3  #> dx4 =~ 1 * lx4  #> dx5 =~ 1 * lx5  #> # Specify latent change scores means  #> dx2 ~ 0 * 1  #> dx3 ~ 0 * 1  #> dx4 ~ 0 * 1  #> dx5 ~ 0 * 1  #> # Specify latent change scores variances  #> dx2 ~~ 0 * dx2  #> dx3 ~~ 0 * dx3  #> dx4 ~~ 0 * dx4  #> dx5 ~~ 0 * dx5  #> # Specify constant change factor  #> g2 =~ 1 * dx2 + 1 * dx3 + 1 * dx4 + 1 * dx5  #> # Specify constant change factor mean  #> g2 ~ alpha_g2 * 1  #> # Specify constant change factor variance  #> g2 ~~ sigma2_g2 * g2  #> # Specify constant change factor covariance with the initial true score  #> g2 ~~ sigma_g2lx1 * lx1 #> # Specify proportional change component  #> dx2 ~ beta_x * lx1  #> dx3 ~ beta_x * lx2  #> dx4 ~ beta_x * lx3  #> dx5 ~ beta_x * lx4  #> # Specify autoregression of change score  #> dx3 ~ phi_x * dx2  #> dx4 ~ phi_x * dx3  #> dx5 ~ phi_x * dx4"},{"path":"https://milanwiedemann.github.io/lcsm/articles/v1-lavaan-syntax.html","id":"add-lavaan-syntax","dir":"Articles","previous_headings":"Univariate LCSM syntax","what":"Add lavaan syntax","title":"Generate lavaan syntax for latent change score models","text":"","code":"uni_lcsm_syntax_add <- specify_uni_lcsm(timepoints = 3,                                     var = \"x\",                                       change_letter = \"g\",                                     add = \"# JUST ANOTHER COMMENT\",                                     model = list(alpha_constant = TRUE,                                                   beta = TRUE,                                                   phi = TRUE)) # To get a readable output use cat() function cat(uni_lcsm_syntax_add) #> # Specify latent true scores  #> lx1 =~ 1 * x1  #> lx2 =~ 1 * x2  #> lx3 =~ 1 * x3  #> # Specify mean of latent true scores  #> lx1 ~ gamma_lx1 * 1  #> lx2 ~ 0 * 1  #> lx3 ~ 0 * 1  #> # Specify variance of latent true scores  #> lx1 ~~ sigma2_lx1 * lx1  #> lx2 ~~ 0 * lx2  #> lx3 ~~ 0 * lx3  #> # Specify intercept of obseved scores  #> x1 ~ 0 * 1  #> x2 ~ 0 * 1  #> x3 ~ 0 * 1  #> # Specify variance of observed scores  #> x1 ~~ sigma2_ux * x1  #> x2 ~~ sigma2_ux * x2  #> x3 ~~ sigma2_ux * x3  #> # Specify autoregressions of latent variables  #> lx2 ~ 1 * lx1  #> lx3 ~ 1 * lx2  #> # Specify latent change scores  #> dx2 =~ 1 * lx2  #> dx3 =~ 1 * lx3  #> # Specify latent change scores means  #> dx2 ~ 0 * 1  #> dx3 ~ 0 * 1  #> # Specify latent change scores variances  #> dx2 ~~ 0 * dx2  #> dx3 ~~ 0 * dx3  #> # Specify constant change factor  #> g2 =~ 1 * dx2 + 1 * dx3  #> # Specify constant change factor mean  #> g2 ~ alpha_g2 * 1  #> # Specify constant change factor variance  #> g2 ~~ sigma2_g2 * g2  #> # Specify constant change factor covariance with the initial true score  #> g2 ~~ sigma_g2lx1 * lx1 #> # Specify proportional change component  #> dx2 ~ beta_x * lx1  #> dx3 ~ beta_x * lx2  #> # Specify autoregression of change score  #> dx3 ~ phi_x * dx2  #> # # # # # # # # # # # # # # # # # # # # # # # #> # ---- Additaional Model Specifications ---- #> # # # # # # # # # # # # # # # # # # # # # # # #> # JUST ANOTHER COMMENT"},{"path":[]},{"path":"https://milanwiedemann.github.io/lcsm/articles/v1-lavaan-syntax.html","id":"true-score-to-change-score","dir":"Articles","previous_headings":"Bivariate LCSM syntax","what":"True Score to Change Score","title":"Generate lavaan syntax for latent change score models","text":"","code":"# Specify bivariate LCSM lavaan_bi_lcsm_delta_01 <- specify_bi_lcsm(timepoints = 5,                                             var_x = \"x\",                                            model_x = list(alpha_constant = TRUE,                                                            beta = TRUE,                                                            phi = TRUE),                                            var_y = \"y\",                                              model_y = list(alpha_constant = TRUE,                                                            beta = TRUE,                                                            phi = TRUE),                                              coupling = list(delta_lag_xy = TRUE,                                                             delta_lag_yx = TRUE),                                            change_letter_x = \"g\",                                            change_letter_y = \"j\") # To get a readable output use cat() function cat(lavaan_bi_lcsm_delta_01) #> # # # # # # # # # # # # # # # # # # # # # #> # Specify parameters for construct x ---- #> # # # # # # # # # # # # # # # # # # # # # #> # Specify latent true scores  #> lx1 =~ 1 * x1  #> lx2 =~ 1 * x2  #> lx3 =~ 1 * x3  #> lx4 =~ 1 * x4  #> lx5 =~ 1 * x5  #> # Specify mean of latent true scores  #> lx1 ~ gamma_lx1 * 1  #> lx2 ~ 0 * 1  #> lx3 ~ 0 * 1  #> lx4 ~ 0 * 1  #> lx5 ~ 0 * 1  #> # Specify variance of latent true scores  #> lx1 ~~ sigma2_lx1 * lx1  #> lx2 ~~ 0 * lx2  #> lx3 ~~ 0 * lx3  #> lx4 ~~ 0 * lx4  #> lx5 ~~ 0 * lx5  #> # Specify intercept of obseved scores  #> x1 ~ 0 * 1  #> x2 ~ 0 * 1  #> x3 ~ 0 * 1  #> x4 ~ 0 * 1  #> x5 ~ 0 * 1  #> # Specify variance of observed scores  #> x1 ~~ sigma2_ux * x1  #> x2 ~~ sigma2_ux * x2  #> x3 ~~ sigma2_ux * x3  #> x4 ~~ sigma2_ux * x4  #> x5 ~~ sigma2_ux * x5  #> # Specify autoregressions of latent variables  #> lx2 ~ 1 * lx1  #> lx3 ~ 1 * lx2  #> lx4 ~ 1 * lx3  #> lx5 ~ 1 * lx4  #> # Specify latent change scores  #> dx2 =~ 1 * lx2  #> dx3 =~ 1 * lx3  #> dx4 =~ 1 * lx4  #> dx5 =~ 1 * lx5  #> # Specify latent change scores means  #> dx2 ~ 0 * 1  #> dx3 ~ 0 * 1  #> dx4 ~ 0 * 1  #> dx5 ~ 0 * 1  #> # Specify latent change scores variances  #> dx2 ~~ 0 * dx2  #> dx3 ~~ 0 * dx3  #> dx4 ~~ 0 * dx4  #> dx5 ~~ 0 * dx5  #> # Specify constant change factor  #> g2 =~ 1 * dx2 + 1 * dx3 + 1 * dx4 + 1 * dx5  #> # Specify constant change factor mean  #> g2 ~ alpha_g2 * 1  #> # Specify constant change factor variance  #> g2 ~~ sigma2_g2 * g2  #> # Specify constant change factor covariance with the initial true score  #> g2 ~~ sigma_g2lx1 * lx1 #> # Specify proportional change component  #> dx2 ~ beta_x * lx1  #> dx3 ~ beta_x * lx2  #> dx4 ~ beta_x * lx3  #> dx5 ~ beta_x * lx4  #> # Specify autoregression of change score  #> dx3 ~ phi_x * dx2  #> dx4 ~ phi_x * dx3  #> dx5 ~ phi_x * dx4  #> # # # # # # # # # # # # # # # # # # # # # #> # Specify parameters for construct y ---- #> # # # # # # # # # # # # # # # # # # # # # #> # Specify latent true scores  #> ly1 =~ 1 * y1  #> ly2 =~ 1 * y2  #> ly3 =~ 1 * y3  #> ly4 =~ 1 * y4  #> ly5 =~ 1 * y5  #> # Specify mean of latent true scores  #> ly1 ~ gamma_ly1 * 1  #> ly2 ~ 0 * 1  #> ly3 ~ 0 * 1  #> ly4 ~ 0 * 1  #> ly5 ~ 0 * 1  #> # Specify variance of latent true scores  #> ly1 ~~ sigma2_ly1 * ly1  #> ly2 ~~ 0 * ly2  #> ly3 ~~ 0 * ly3  #> ly4 ~~ 0 * ly4  #> ly5 ~~ 0 * ly5  #> # Specify intercept of obseved scores  #> y1 ~ 0 * 1  #> y2 ~ 0 * 1  #> y3 ~ 0 * 1  #> y4 ~ 0 * 1  #> y5 ~ 0 * 1  #> # Specify variance of observed scores  #> y1 ~~ sigma2_uy * y1  #> y2 ~~ sigma2_uy * y2  #> y3 ~~ sigma2_uy * y3  #> y4 ~~ sigma2_uy * y4  #> y5 ~~ sigma2_uy * y5  #> # Specify autoregressions of latent variables  #> ly2 ~ 1 * ly1  #> ly3 ~ 1 * ly2  #> ly4 ~ 1 * ly3  #> ly5 ~ 1 * ly4  #> # Specify latent change scores  #> dy2 =~ 1 * ly2  #> dy3 =~ 1 * ly3  #> dy4 =~ 1 * ly4  #> dy5 =~ 1 * ly5  #> # Specify latent change scores means  #> dy2 ~ 0 * 1  #> dy3 ~ 0 * 1  #> dy4 ~ 0 * 1  #> dy5 ~ 0 * 1  #> # Specify latent change scores variances  #> dy2 ~~ 0 * dy2  #> dy3 ~~ 0 * dy3  #> dy4 ~~ 0 * dy4  #> dy5 ~~ 0 * dy5  #> # Specify constant change factor  #> j2 =~ 1 * dy2 + 1 * dy3 + 1 * dy4 + 1 * dy5  #> # Specify constant change factor mean  #> j2 ~ alpha_j2 * 1  #> # Specify constant change factor variance  #> j2 ~~ sigma2_j2 * j2  #> # Specify constant change factor covariance with the initial true score  #> j2 ~~ sigma_j2ly1 * ly1 #> # Specify proportional change component  #> dy2 ~ beta_y * ly1  #> dy3 ~ beta_y * ly2  #> dy4 ~ beta_y * ly3  #> dy5 ~ beta_y * ly4  #> # Specify autoregression of change score  #> dy3 ~ phi_y * dy2  #> dy4 ~ phi_y * dy3  #> dy5 ~ phi_y * dy4  #> # Specify residual covariances  #> x1 ~~ sigma_su * y1  #> x2 ~~ sigma_su * y2  #> x3 ~~ sigma_su * y3  #> x4 ~~ sigma_su * y4  #> x5 ~~ sigma_su * y5  #> # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #> # Specify covariances betweeen specified change components (alpha) and intercepts (initial latent true scores lx1 and ly1) ---- #> # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #> # Specify covariance of intercepts  #> lx1 ~~ sigma_ly1lx1 * ly1  #> # Specify covariance of constant change and intercept between constructs  #> ly1 ~~ sigma_g2ly1 * g2  #> # Specify covariance of constant change and intercept between constructs  #> lx1 ~~ sigma_j2lx1 * j2  #> # Specify covariance of constant change factors between constructs  #> g2 ~~ sigma_j2g2 * j2  #> # # # # # # # # # # # # # # # # # # # # # # # # # # # #> # Specify between-construct coupling parameters ---- #> # # # # # # # # # # # # # # # # # # # # # # # # # # # #> # Change score x (t) is determined by true score y (t-1)   #> dx2 ~ delta_lag_xy * ly1  #> dx3 ~ delta_lag_xy * ly2  #> dx4 ~ delta_lag_xy * ly3  #> dx5 ~ delta_lag_xy * ly4  #> # Change score y (t) is determined by true score x (t-1)   #> dy2 ~ delta_lag_yx * lx1  #> dy3 ~ delta_lag_yx * lx2  #> dy4 ~ delta_lag_yx * lx3  #> dy5 ~ delta_lag_yx * lx4"},{"path":"https://milanwiedemann.github.io/lcsm/articles/v1-lavaan-syntax.html","id":"change-score-to-change-score","dir":"Articles","previous_headings":"Bivariate LCSM syntax","what":"Change Score to Change Score","title":"Generate lavaan syntax for latent change score models","text":"","code":"# Specify bivariate LCSM lavaan_bi_lcsm_xi_01 <- specify_bi_lcsm(timepoints = 5,                                          var_x = \"x\",                                         model_x = list(alpha_constant = TRUE,                                                         beta = TRUE,                                                         phi = TRUE),                                         var_y = \"y\",                                           model_y = list(alpha_constant = TRUE,                                                         beta = TRUE,                                                         phi = TRUE),                                           coupling = list(xi_lag_xy = TRUE,                                                          xi_lag_yx = TRUE),                                         change_letter_x = \"g\",                                         change_letter_y = \"j\") # To get a readable output use cat() function cat(lavaan_bi_lcsm_xi_01) #> # # # # # # # # # # # # # # # # # # # # # #> # Specify parameters for construct x ---- #> # # # # # # # # # # # # # # # # # # # # # #> # Specify latent true scores  #> lx1 =~ 1 * x1  #> lx2 =~ 1 * x2  #> lx3 =~ 1 * x3  #> lx4 =~ 1 * x4  #> lx5 =~ 1 * x5  #> # Specify mean of latent true scores  #> lx1 ~ gamma_lx1 * 1  #> lx2 ~ 0 * 1  #> lx3 ~ 0 * 1  #> lx4 ~ 0 * 1  #> lx5 ~ 0 * 1  #> # Specify variance of latent true scores  #> lx1 ~~ sigma2_lx1 * lx1  #> lx2 ~~ 0 * lx2  #> lx3 ~~ 0 * lx3  #> lx4 ~~ 0 * lx4  #> lx5 ~~ 0 * lx5  #> # Specify intercept of obseved scores  #> x1 ~ 0 * 1  #> x2 ~ 0 * 1  #> x3 ~ 0 * 1  #> x4 ~ 0 * 1  #> x5 ~ 0 * 1  #> # Specify variance of observed scores  #> x1 ~~ sigma2_ux * x1  #> x2 ~~ sigma2_ux * x2  #> x3 ~~ sigma2_ux * x3  #> x4 ~~ sigma2_ux * x4  #> x5 ~~ sigma2_ux * x5  #> # Specify autoregressions of latent variables  #> lx2 ~ 1 * lx1  #> lx3 ~ 1 * lx2  #> lx4 ~ 1 * lx3  #> lx5 ~ 1 * lx4  #> # Specify latent change scores  #> dx2 =~ 1 * lx2  #> dx3 =~ 1 * lx3  #> dx4 =~ 1 * lx4  #> dx5 =~ 1 * lx5  #> # Specify latent change scores means  #> dx2 ~ 0 * 1  #> dx3 ~ 0 * 1  #> dx4 ~ 0 * 1  #> dx5 ~ 0 * 1  #> # Specify latent change scores variances  #> dx2 ~~ 0 * dx2  #> dx3 ~~ 0 * dx3  #> dx4 ~~ 0 * dx4  #> dx5 ~~ 0 * dx5  #> # Specify constant change factor  #> g2 =~ 1 * dx2 + 1 * dx3 + 1 * dx4 + 1 * dx5  #> # Specify constant change factor mean  #> g2 ~ alpha_g2 * 1  #> # Specify constant change factor variance  #> g2 ~~ sigma2_g2 * g2  #> # Specify constant change factor covariance with the initial true score  #> g2 ~~ sigma_g2lx1 * lx1 #> # Specify proportional change component  #> dx2 ~ beta_x * lx1  #> dx3 ~ beta_x * lx2  #> dx4 ~ beta_x * lx3  #> dx5 ~ beta_x * lx4  #> # Specify autoregression of change score  #> dx3 ~ phi_x * dx2  #> dx4 ~ phi_x * dx3  #> dx5 ~ phi_x * dx4  #> # # # # # # # # # # # # # # # # # # # # # #> # Specify parameters for construct y ---- #> # # # # # # # # # # # # # # # # # # # # # #> # Specify latent true scores  #> ly1 =~ 1 * y1  #> ly2 =~ 1 * y2  #> ly3 =~ 1 * y3  #> ly4 =~ 1 * y4  #> ly5 =~ 1 * y5  #> # Specify mean of latent true scores  #> ly1 ~ gamma_ly1 * 1  #> ly2 ~ 0 * 1  #> ly3 ~ 0 * 1  #> ly4 ~ 0 * 1  #> ly5 ~ 0 * 1  #> # Specify variance of latent true scores  #> ly1 ~~ sigma2_ly1 * ly1  #> ly2 ~~ 0 * ly2  #> ly3 ~~ 0 * ly3  #> ly4 ~~ 0 * ly4  #> ly5 ~~ 0 * ly5  #> # Specify intercept of obseved scores  #> y1 ~ 0 * 1  #> y2 ~ 0 * 1  #> y3 ~ 0 * 1  #> y4 ~ 0 * 1  #> y5 ~ 0 * 1  #> # Specify variance of observed scores  #> y1 ~~ sigma2_uy * y1  #> y2 ~~ sigma2_uy * y2  #> y3 ~~ sigma2_uy * y3  #> y4 ~~ sigma2_uy * y4  #> y5 ~~ sigma2_uy * y5  #> # Specify autoregressions of latent variables  #> ly2 ~ 1 * ly1  #> ly3 ~ 1 * ly2  #> ly4 ~ 1 * ly3  #> ly5 ~ 1 * ly4  #> # Specify latent change scores  #> dy2 =~ 1 * ly2  #> dy3 =~ 1 * ly3  #> dy4 =~ 1 * ly4  #> dy5 =~ 1 * ly5  #> # Specify latent change scores means  #> dy2 ~ 0 * 1  #> dy3 ~ 0 * 1  #> dy4 ~ 0 * 1  #> dy5 ~ 0 * 1  #> # Specify latent change scores variances  #> dy2 ~~ 0 * dy2  #> dy3 ~~ 0 * dy3  #> dy4 ~~ 0 * dy4  #> dy5 ~~ 0 * dy5  #> # Specify constant change factor  #> j2 =~ 1 * dy2 + 1 * dy3 + 1 * dy4 + 1 * dy5  #> # Specify constant change factor mean  #> j2 ~ alpha_j2 * 1  #> # Specify constant change factor variance  #> j2 ~~ sigma2_j2 * j2  #> # Specify constant change factor covariance with the initial true score  #> j2 ~~ sigma_j2ly1 * ly1 #> # Specify proportional change component  #> dy2 ~ beta_y * ly1  #> dy3 ~ beta_y * ly2  #> dy4 ~ beta_y * ly3  #> dy5 ~ beta_y * ly4  #> # Specify autoregression of change score  #> dy3 ~ phi_y * dy2  #> dy4 ~ phi_y * dy3  #> dy5 ~ phi_y * dy4  #> # Specify residual covariances  #> x1 ~~ sigma_su * y1  #> x2 ~~ sigma_su * y2  #> x3 ~~ sigma_su * y3  #> x4 ~~ sigma_su * y4  #> x5 ~~ sigma_su * y5  #> # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #> # Specify covariances betweeen specified change components (alpha) and intercepts (initial latent true scores lx1 and ly1) ---- #> # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #> # Specify covariance of intercepts  #> lx1 ~~ sigma_ly1lx1 * ly1  #> # Specify covariance of constant change and intercept between constructs  #> ly1 ~~ sigma_g2ly1 * g2  #> # Specify covariance of constant change and intercept between constructs  #> lx1 ~~ sigma_j2lx1 * j2  #> # Specify covariance of constant change factors between constructs  #> g2 ~~ sigma_j2g2 * j2  #> # # # # # # # # # # # # # # # # # # # # # # # # # # # #> # Specify between-construct coupling parameters ---- #> # # # # # # # # # # # # # # # # # # # # # # # # # # # #> # Change score x (t) is determined by change score y (t-1)   #> dx3 ~ xi_lag_xy * dy2  #> dx4 ~ xi_lag_xy * dy3  #> dx5 ~ xi_lag_xy * dy4  #> # Change score y (t) is determined by change score x (t-1)   #> dy3 ~ xi_lag_yx * dx2  #> dy4 ~ xi_lag_yx * dx3  #> dy5 ~ xi_lag_yx * dx4"},{"path":"https://milanwiedemann.github.io/lcsm/articles/v1-lavaan-syntax.html","id":"add-model-specifications-to-lavaan-code","dir":"Articles","previous_headings":"Bivariate LCSM syntax","what":"Add model specifications to lavaan code","title":"Generate lavaan syntax for latent change score models","text":"","code":"# Specify bivariate LCSM lavaan_bi_lcsm_xi_add <- specify_bi_lcsm(timepoints = 3,                                          var_x = \"x\",                                         model_x = list(alpha_constant = TRUE,                                                         beta = TRUE,                                                         phi = TRUE),                                         var_y = \"y\",                                           model_y = list(alpha_constant = TRUE,                                                         beta = TRUE,                                                         phi = TRUE),                                           coupling = list(xi_lag_xy = TRUE,                                                          xi_lag_yx = TRUE),                                         add = \"age ~~ age_j2 * j2\",                                         change_letter_x = \"g\",                                         change_letter_y = \"j\") # To get a readable output use cat() function cat(lavaan_bi_lcsm_xi_add) #> # # # # # # # # # # # # # # # # # # # # # #> # Specify parameters for construct x ---- #> # # # # # # # # # # # # # # # # # # # # # #> # Specify latent true scores  #> lx1 =~ 1 * x1  #> lx2 =~ 1 * x2  #> lx3 =~ 1 * x3  #> # Specify mean of latent true scores  #> lx1 ~ gamma_lx1 * 1  #> lx2 ~ 0 * 1  #> lx3 ~ 0 * 1  #> # Specify variance of latent true scores  #> lx1 ~~ sigma2_lx1 * lx1  #> lx2 ~~ 0 * lx2  #> lx3 ~~ 0 * lx3  #> # Specify intercept of obseved scores  #> x1 ~ 0 * 1  #> x2 ~ 0 * 1  #> x3 ~ 0 * 1  #> # Specify variance of observed scores  #> x1 ~~ sigma2_ux * x1  #> x2 ~~ sigma2_ux * x2  #> x3 ~~ sigma2_ux * x3  #> # Specify autoregressions of latent variables  #> lx2 ~ 1 * lx1  #> lx3 ~ 1 * lx2  #> # Specify latent change scores  #> dx2 =~ 1 * lx2  #> dx3 =~ 1 * lx3  #> # Specify latent change scores means  #> dx2 ~ 0 * 1  #> dx3 ~ 0 * 1  #> # Specify latent change scores variances  #> dx2 ~~ 0 * dx2  #> dx3 ~~ 0 * dx3  #> # Specify constant change factor  #> g2 =~ 1 * dx2 + 1 * dx3  #> # Specify constant change factor mean  #> g2 ~ alpha_g2 * 1  #> # Specify constant change factor variance  #> g2 ~~ sigma2_g2 * g2  #> # Specify constant change factor covariance with the initial true score  #> g2 ~~ sigma_g2lx1 * lx1 #> # Specify proportional change component  #> dx2 ~ beta_x * lx1  #> dx3 ~ beta_x * lx2  #> # Specify autoregression of change score  #> dx3 ~ phi_x * dx2  #> # # # # # # # # # # # # # # # # # # # # # #> # Specify parameters for construct y ---- #> # # # # # # # # # # # # # # # # # # # # # #> # Specify latent true scores  #> ly1 =~ 1 * y1  #> ly2 =~ 1 * y2  #> ly3 =~ 1 * y3  #> # Specify mean of latent true scores  #> ly1 ~ gamma_ly1 * 1  #> ly2 ~ 0 * 1  #> ly3 ~ 0 * 1  #> # Specify variance of latent true scores  #> ly1 ~~ sigma2_ly1 * ly1  #> ly2 ~~ 0 * ly2  #> ly3 ~~ 0 * ly3  #> # Specify intercept of obseved scores  #> y1 ~ 0 * 1  #> y2 ~ 0 * 1  #> y3 ~ 0 * 1  #> # Specify variance of observed scores  #> y1 ~~ sigma2_uy * y1  #> y2 ~~ sigma2_uy * y2  #> y3 ~~ sigma2_uy * y3  #> # Specify autoregressions of latent variables  #> ly2 ~ 1 * ly1  #> ly3 ~ 1 * ly2  #> # Specify latent change scores  #> dy2 =~ 1 * ly2  #> dy3 =~ 1 * ly3  #> # Specify latent change scores means  #> dy2 ~ 0 * 1  #> dy3 ~ 0 * 1  #> # Specify latent change scores variances  #> dy2 ~~ 0 * dy2  #> dy3 ~~ 0 * dy3  #> # Specify constant change factor  #> j2 =~ 1 * dy2 + 1 * dy3  #> # Specify constant change factor mean  #> j2 ~ alpha_j2 * 1  #> # Specify constant change factor variance  #> j2 ~~ sigma2_j2 * j2  #> # Specify constant change factor covariance with the initial true score  #> j2 ~~ sigma_j2ly1 * ly1 #> # Specify proportional change component  #> dy2 ~ beta_y * ly1  #> dy3 ~ beta_y * ly2  #> # Specify autoregression of change score  #> dy3 ~ phi_y * dy2  #> # Specify residual covariances  #> x1 ~~ sigma_su * y1  #> x2 ~~ sigma_su * y2  #> x3 ~~ sigma_su * y3  #> # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #> # Specify covariances betweeen specified change components (alpha) and intercepts (initial latent true scores lx1 and ly1) ---- #> # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #> # Specify covariance of intercepts  #> lx1 ~~ sigma_ly1lx1 * ly1  #> # Specify covariance of constant change and intercept between constructs  #> ly1 ~~ sigma_g2ly1 * g2  #> # Specify covariance of constant change and intercept between constructs  #> lx1 ~~ sigma_j2lx1 * j2  #> # Specify covariance of constant change factors between constructs  #> g2 ~~ sigma_j2g2 * j2  #> # # # # # # # # # # # # # # # # # # # # # # # # # # # #> # Specify between-construct coupling parameters ---- #> # # # # # # # # # # # # # # # # # # # # # # # # # # # #> # Change score x (t) is determined by change score y (t-1)   #> dx3 ~ xi_lag_xy * dy2  #> # Change score y (t) is determined by change score x (t-1)   #> dy3 ~ xi_lag_yx * dx2  #> # # # # # # # # # # # # # # # # # # # # # # # #> # ---- Additaional Model Specifications ---- #> # # # # # # # # # # # # # # # # # # # # # # # #> age ~~ age_j2 * j2"},{"path":"https://milanwiedemann.github.io/lcsm/articles/v1-lavaan-syntax.html","id":"todos","dir":"Articles","previous_headings":"","what":"TODOs","title":"Generate lavaan syntax for latent change score models","text":"show different examples highlight comments explain different sections code show syntax can adapted used outside package lavaan","code":""},{"path":"https://milanwiedemann.github.io/lcsm/articles/v2-path-diagrams.html","id":"plot-simplified-path-diagrams-of-lcsms","dir":"Articles","previous_headings":"","what":"Plot simplified path diagrams of LCSMs","title":"Create path diagrams to visualise model specifications","text":"function work progress can plot univariate bivariate LCSMs specified fit_uni_lcsm() fit_bi_lcsm(). Modified LCSMs probably return errors layout matrix gets created plot function supports specifications can modelled package. input arguments plotting simplified path dioagram : estimated lavaan object lavaan_object, lavaan_syntax , lcsm indicating whether LCSM “univariate” “bivariate” Optional arguments can used change look plot, example: white: observed scores green: latent true scores blue: latent change scores yellow: latent change scores arguments can passed semPlot::semPaths(), example: , “path” show unweighted gray edges, “par” show parameter estimates weighted (green/red) edges whatLabels, “label” show edege names label “est” parameter estimates, “hide” hide edge labels","code":""},{"path":"https://milanwiedemann.github.io/lcsm/articles/v2-path-diagrams.html","id":"univariate-lcsm","dir":"Articles","previous_headings":"Plot simplified path diagrams of LCSMs","what":"Univariate LCSM","title":"Create path diagrams to visualise model specifications","text":"","code":"# Fit bivariate lcsm and save the results  uni_lavaan_results <- fit_uni_lcsm(data = data_uni_lcsm,                                     var = c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\"),                                    model = list(alpha_constant = TRUE,                                                  beta = FALSE,                                                  phi = TRUE)                                   ) #> Warning in lav_data_full(data = data, group = group, cluster = cluster, : lavaan WARNING: some cases are empty and will be ignored: #>   239  # Save the lavaan syntax that is used to create the layout matrix for semPlot uni_lavaan_syntax <- fit_uni_lcsm(data = data_uni_lcsm,                                    var = c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\"),                                   model = list(alpha_constant = TRUE,                                                 beta = FALSE,                                                 phi = TRUE),                                   return_lavaan_syntax = TRUE)  # Plot the results plot_lcsm(lavaan_object = uni_lavaan_results,           lavaan_syntax = uni_lavaan_syntax,           edge.label.cex = .9,             lcsm_colours = TRUE,           lcsm = \"univariate\")"},{"path":"https://milanwiedemann.github.io/lcsm/articles/v2-path-diagrams.html","id":"bivariate-lcsm","dir":"Articles","previous_headings":"Plot simplified path diagrams of LCSMs","what":"Bivariate LCSM","title":"Create path diagrams to visualise model specifications","text":"","code":"# Fit bivariate lcsm and save the results  bi_lavaan_results <- fit_bi_lcsm(data = data_bi_lcsm,                                   var_x = c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\"),                                  var_y = c(\"y1\", \"y2\", \"y3\", \"y4\", \"y5\"),                                  model_x = list(alpha_constant = TRUE,                                                  beta = TRUE,                                                  phi = FALSE),                                  model_y = list(alpha_constant = TRUE,                                                  beta = TRUE,                                                  phi = TRUE),                                  coupling = list(delta_lag_xy = TRUE,                                                   xi_lag_yx = TRUE))  # Save the lavaan syntax that is used to create the layout matrix for semPlot bi_lavaan_syntax <- fit_bi_lcsm(data = data_bi_lcsm,                                  var_x = c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\"),                                 var_y = c(\"y1\", \"y2\", \"y3\", \"y4\", \"y5\"),                                 model_x = list(alpha_constant = TRUE,                                                 beta = TRUE,                                                 phi = FALSE),                                 model_y = list(alpha_constant = TRUE,                                                 beta = TRUE,                                                 phi = TRUE),                                 coupling = list(delta_lag_xy = TRUE,                                                  xi_lag_yx = TRUE),                                 return_lavaan_syntax = TRUE)  # Plot the results plot_lcsm(lavaan_object = bi_lavaan_results,            lavaan_syntax = bi_lavaan_syntax,           lcsm_colours = TRUE,           whatLabels = \"hide\",           lcsm = \"bivariate\")"},{"path":"https://milanwiedemann.github.io/lcsm/articles/v3-extract-tutorial.html","id":"create-univariate-models","dir":"Articles","previous_headings":"","what":"Create univariate models","title":"Parameter estimates and fit statistics of LCSMs","text":"","code":"# First fit some latent change score models  # No change model uni_lcsm_01 <- fit_uni_lcsm(data = data_uni_lcsm,                              var = c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\"),                             model = list(alpha_constant = FALSE,                                           beta = FALSE,                                           phi = FALSE)) #> Warning in lav_data_full(data = data, group = group, cluster = cluster, : lavaan WARNING: some cases are empty and will be ignored: #>   239 # Constant change only model uni_lcsm_02 <- fit_uni_lcsm(data = data_uni_lcsm,                              var = c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\"),                             model = list(alpha_constant = TRUE,                                           beta = FALSE,                                           phi = FALSE)) #> Warning in lav_data_full(data = data, group = group, cluster = cluster, : lavaan WARNING: some cases are empty and will be ignored: #>   239  # Constant change and proportional change (Dual change model) uni_lcsm_03 <- fit_uni_lcsm(data = data_uni_lcsm,                              var = c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\"),                             model = list(alpha_constant = TRUE,                                           beta = TRUE,                                           phi = FALSE)) #> Warning in lav_data_full(data = data, group = group, cluster = cluster, : lavaan WARNING: some cases are empty and will be ignored: #>   239"},{"path":"https://milanwiedemann.github.io/lcsm/articles/v3-extract-tutorial.html","id":"extract-fit-statistics","dir":"Articles","previous_headings":"","what":"Extract fit statistics","title":"Parameter estimates and fit statistics of LCSMs","text":"function takes lavaan objects input returns fit statistics. fit statistics can returned using argument details = TRUE. Parameter estimates bivariate LCSM","code":"# Extract fit statistics fit_uni_lcsm <- extract_fit(uni_lcsm_01, uni_lcsm_02, uni_lcsm_03)  # Print table of parameter estimates knitr::kable(fit_uni_lcsm,               digits = 3,               caption = \"Parameter estimates for bivariate LCSM\")"},{"path":"https://milanwiedemann.github.io/lcsm/articles/v3-extract-tutorial.html","id":"extract-parameters","dir":"Articles","previous_headings":"","what":"Extract parameters","title":"Parameter estimates and fit statistics of LCSMs","text":"Parameter estimates bivariate LCSM","code":"# Now extract parameter estimates param_uni_lcsm_02 <- extract_param(uni_lcsm_03, printp = TRUE)  # Print table of parameter estimates knitr::kable(param_uni_lcsm_02,               digits = 3,               caption = \"Parameter estimates for bivariate LCSM\")"},{"path":"https://milanwiedemann.github.io/lcsm/articles/v3-extract-tutorial.html","id":"todos","dir":"Articles","previous_headings":"","what":"TODOs","title":"Parameter estimates and fit statistics of LCSMs","text":"now see example README file Github shinyApp “shinychange” step step example building way univariate lcsm select data run univariate models add parameters compare results using anova model parameters use grimm 2017 data?","code":""},{"path":"https://milanwiedemann.github.io/lcsm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Milan Wiedemann. Author, maintainer. Graham M Thew. Contributor. Urška Košir. Contributor. Anke Ehlers. Thesis advisor. Mental Health Research UK. Funder.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wiedemann, M., Thew, G. R., Košir, U., & Ehlers, . (2022). lcsm: R package tutorial latent change score modelling. Wellcome Open Research, 7:149. https://doi.org/10.12688/wellcomeopenres.17536.1","code":"@Article{,   author = {Milan Wiedemann and Graham R Thew and Urška Košir and Anke Ehlers},   title = {{lcsm}: {An} {R} package latent change score modelling},   journal = {Wellcome Open Research},   year = {2022},   volume = {7},   number = {149},   doi = {10.12688/wellcomeopenres.17536.1},   url = {https://github.com/milanwiedemann/lcsm}, }"},{"path":"https://milanwiedemann.github.io/lcsm/index.html","id":"lcsm-an-r-package-for-latent-change-score-modeling","dir":"","previous_headings":"","what":"Univariate and Bivariate Latent Change Score Modelling","title":"Univariate and Bivariate Latent Change Score Modelling","text":"package offers helper functions specify analyse univariate bivariate latent change score models (LCSM) using lavaan (Rosseel, 2012). details method see example McArdle (2009), Ghisletta (2012), Grimm et al. (2012), Grimm, Ram & Estabrook (2017). lcsm package combines strengths R packages like lavaan, broom, semPlot generating lavaan syntax helps packages work together. work progress feedback welcome!","code":""},{"path":"https://milanwiedemann.github.io/lcsm/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Univariate and Bivariate Latent Change Score Modelling","text":"can install released version lcsm CRAN : development version can installed GitHub using:","code":"install.packages(\"lcsm\") # install.packages(\"devtools\") devtools::install_github(\"milanwiedemann/lcsm\")"},{"path":"https://milanwiedemann.github.io/lcsm/index.html","id":"overview-of-the-functions","dir":"","previous_headings":"","what":"Overview of the functions","title":"Univariate and Bivariate Latent Change Score Modelling","text":"lcsm package contains functions listed . detailed description functions available README vignettes. interactive online application shinychange also illustrates functions package. specify_uni_lcsm(): Generate syntax univariate LCSM specify_bi_lcsm(): Generate syntax bivariate LCSM fit_uni_lcsm(): Fit univariate LCSM fit_bi_lcsm(): Fit bivariate LCSM extract_fit(): Extract fit statistics extract_param(): Extract estimated parameters sim_uni_lcsm(): Simulate data specifying parameters univariate LCSM sim_bi_lcsm(): Simulate data specifying parameters bivariate LCSM plot_lcsm(): Visualise LCSM using semPlot select_uni_cases(): Select cases analysis based available scores one construct select_bi_cases(): Select cases analysis based available scores two construct","code":""},{"path":"https://milanwiedemann.github.io/lcsm/index.html","id":"how-to-use-lcsm","dir":"","previous_headings":"","what":"How to use lcsm","title":"Univariate and Bivariate Latent Change Score Modelling","text":"examples use lcsm package.","code":"# Load the package library(lcsm) #>  #> ── This is lcsm 0.3.1 ────────────────────────────────────────────────────────── #> ℹ Please report any issues or ideas at: #> ℹ https://github.com/milanwiedemann/lcsm/issues #>"},{"path":"https://milanwiedemann.github.io/lcsm/index.html","id":"visualise-data","dir":"","previous_headings":"How to use lcsm","what":"Visualise data","title":"Univariate and Bivariate Latent Change Score Modelling","text":"Longitudinal data can visualised using plot_trajectories() function. 30% data visualised using argument random_sample_frac = 0.3. consecutive measures connected lines specified connect_missing = FALSE.","code":"# Create plot for construct x plot_x <- plot_trajectories(data = data_bi_lcsm,                             id_var = \"id\",                              var_list = c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\",                                           \"x6\", \"x7\", \"x8\", \"x9\", \"x10\"),                             xlab = \"Time\", ylab = \"X Score\",                             connect_missing = FALSE,                              random_sample_frac = 0.3)  # Create plot for construct y plot_y <- plot_trajectories(data = data_bi_lcsm,                             id_var = \"id\",                              var_list = c(\"y1\", \"y2\", \"y3\", \"y4\", \"y5\",                                          \"y6\", \"y7\", \"y8\", \"y9\", \"y10\"),                             xlab = \"Time\", ylab = \"Y Score\",                             connect_missing = FALSE,                              random_sample_frac = 0.3)  # Arrange plots next to each other using patchwork library(patchwork) plot_x + plot_y + plot_annotation(tag_levels = 'A') #> Warning: Removed 18 rows containing missing values (`geom_line()`). #> Warning: Removed 85 rows containing missing values (`geom_point()`). #> Warning: Removed 37 rows containing missing values (`geom_line()`). #> Warning: Removed 172 rows containing missing values (`geom_point()`)."},{"path":"https://milanwiedemann.github.io/lcsm/index.html","id":"fit-lcsms","dir":"","previous_headings":"How to use lcsm","what":"Fit LCSMs","title":"Univariate and Bivariate Latent Change Score Modelling","text":"functions fit_uni_lcsm() fit_bi_lcsm() can used fit univariate bivariate LCSM different model specifications. first step, two function generate user specified lavaan syntax calling specify_uni_lcsm() specify_bi_lcsm() functions. following table describes different model specifications model arguments can take. detail can found help files help(fit_uni_lcsm).","code":""},{"path":"https://milanwiedemann.github.io/lcsm/index.html","id":"fit-univariate-lcsms","dir":"","previous_headings":"How to use lcsm > Fit LCSMs","what":"Fit univariate LCSMs","title":"Univariate and Bivariate Latent Change Score Modelling","text":"example shows specify generic univariate latent change score model using function specify_uni_lcsm(). table description parameters can estimated shown .  function fit_uni_lcsm() can used fit univariate LCSM using sample data set data_uni_lcsm. functions first writes lavaan syntax specified model argument passes lavaaan::lavaan(). also possible show lavaan syntax created fit model function specify_uni_lcsm(). lavaan syntax includes comments describing parts syntax detail. save syntax object argument return_lavaan_syntax set TRUE. object looks bit funny, ’s one long line text, can formatted look beautiful readable using cat(syntax).","code":"specify_uni_lcsm(timepoints = 5,                  var = \"x\",                    change_letter = \"g\",                  model = list(alpha_constant = TRUE,                                beta = TRUE,                                phi = TRUE)) # Specify latent true scores  lx1 =~ 1 * x1  lx2 =~ 1 * x2  lx3 =~ 1 * x3  lx4 =~ 1 * x4  lx5 =~ 1 * x5  # Specify mean of latent true scores  lx1 ~ gamma_lx1 * 1  lx2 ~ 0 * 1  lx3 ~ 0 * 1  lx4 ~ 0 * 1  lx5 ~ 0 * 1  # Specify variance of latent true scores  lx1 ~~ sigma2_lx1 * lx1  lx2 ~~ 0 * lx2  lx3 ~~ 0 * lx3  lx4 ~~ 0 * lx4  lx5 ~~ 0 * lx5  # Specify intercept of obseved scores  x1 ~ 0 * 1  x2 ~ 0 * 1  x3 ~ 0 * 1  x4 ~ 0 * 1  x5 ~ 0 * 1  # Specify variance of observed scores  x1 ~~ sigma2_ux * x1  x2 ~~ sigma2_ux * x2  x3 ~~ sigma2_ux * x3  x4 ~~ sigma2_ux * x4  x5 ~~ sigma2_ux * x5  # Specify autoregressions of latent variables  lx2 ~ 1 * lx1  lx3 ~ 1 * lx2  lx4 ~ 1 * lx3  lx5 ~ 1 * lx4  # Specify latent change scores  dx2 =~ 1 * lx2  dx3 =~ 1 * lx3  dx4 =~ 1 * lx4  dx5 =~ 1 * lx5  # Specify latent change scores means  dx2 ~ 0 * 1  dx3 ~ 0 * 1  dx4 ~ 0 * 1  dx5 ~ 0 * 1  # Specify latent change scores variances  dx2 ~~ 0 * dx2  dx3 ~~ 0 * dx3  dx4 ~~ 0 * dx4  dx5 ~~ 0 * dx5  # Specify constant change factor  g2 =~ 1 * dx2 + 1 * dx3 + 1 * dx4 + 1 * dx5  # Specify constant change factor mean  g2 ~ alpha_g2 * 1  # Specify constant change factor variance  g2 ~~ sigma2_g2 * g2  # Specify constant change factor covariance with the initial true score  g2 ~~ sigma_g2lx1 * lx1 # Specify proportional change component  dx2 ~ beta_x * lx1  dx3 ~ beta_x * lx2  dx4 ~ beta_x * lx3  dx5 ~ beta_x * lx4  # Specify autoregression of change score  dx3 ~ phi_x * dx2  dx4 ~ phi_x * dx3  dx5 ~ phi_x * dx4 # Fit univariate latent change score model fit_uni_lcsm(data = data_uni_lcsm,               var =  c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\",                       \"x6\", \"x7\", \"x8\", \"x9\", \"x10\"),              model = list(alpha_constant = TRUE,                            beta = FALSE,                            phi = TRUE)) #> lavaan 0.6.13 ended normally after 67 iterations #>  #>   Estimator                                         ML #>   Optimization method                           NLMINB #>   Number of model parameters                        23 #>   Number of equality constraints                    16 #>  #>   Number of observations                           500 #>   Number of missing patterns                       273 #>  #> Model Test User Model: #>                                               Standard      Scaled #>   Test Statistic                                75.389      74.400 #>   Degrees of freedom                                58          58 #>   P-value (Chi-square)                           0.062       0.072 #>   Scaling correction factor                                  1.013 #>     Yuan-Bentler correction (Mplus variant) # Fit univariate latent change score model syntax <- fit_uni_lcsm(data = data_uni_lcsm,                         var =  c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\",                                 \"x6\", \"x7\", \"x8\", \"x9\", \"x10\"),                        model = list(alpha_constant = TRUE,                                      beta = FALSE,                                      phi = TRUE),                       return_lavaan_syntax = TRUE)  # Return lavaan syntax in easy to read format cat(syntax) # Specify latent true scores  lx1 =~ 1 * x1  lx2 =~ 1 * x2  lx3 =~ 1 * x3  lx4 =~ 1 * x4  lx5 =~ 1 * x5  lx6 =~ 1 * x6  lx7 =~ 1 * x7  lx8 =~ 1 * x8  lx9 =~ 1 * x9  lx10 =~ 1 * x10  # Specify mean of latent true scores  lx1 ~ gamma_lx1 * 1  lx2 ~ 0 * 1  lx3 ~ 0 * 1  lx4 ~ 0 * 1  lx5 ~ 0 * 1  lx6 ~ 0 * 1  lx7 ~ 0 * 1  lx8 ~ 0 * 1  lx9 ~ 0 * 1  lx10 ~ 0 * 1  # Specify variance of latent true scores  lx1 ~~ sigma2_lx1 * lx1  lx2 ~~ 0 * lx2  lx3 ~~ 0 * lx3  lx4 ~~ 0 * lx4  lx5 ~~ 0 * lx5  lx6 ~~ 0 * lx6  lx7 ~~ 0 * lx7  lx8 ~~ 0 * lx8  lx9 ~~ 0 * lx9  lx10 ~~ 0 * lx10  # Specify intercept of obseved scores  x1 ~ 0 * 1  x2 ~ 0 * 1  x3 ~ 0 * 1  x4 ~ 0 * 1  x5 ~ 0 * 1  x6 ~ 0 * 1  x7 ~ 0 * 1  x8 ~ 0 * 1  x9 ~ 0 * 1  x10 ~ 0 * 1  # Specify variance of observed scores  x1 ~~ sigma2_ux * x1  x2 ~~ sigma2_ux * x2  x3 ~~ sigma2_ux * x3  x4 ~~ sigma2_ux * x4  x5 ~~ sigma2_ux * x5  x6 ~~ sigma2_ux * x6  x7 ~~ sigma2_ux * x7  x8 ~~ sigma2_ux * x8  x9 ~~ sigma2_ux * x9  x10 ~~ sigma2_ux * x10  # Specify autoregressions of latent variables  lx2 ~ 1 * lx1  lx3 ~ 1 * lx2  lx4 ~ 1 * lx3  lx5 ~ 1 * lx4  lx6 ~ 1 * lx5  lx7 ~ 1 * lx6  lx8 ~ 1 * lx7  lx9 ~ 1 * lx8  lx10 ~ 1 * lx9  # Specify latent change scores  dx2 =~ 1 * lx2  dx3 =~ 1 * lx3  dx4 =~ 1 * lx4  dx5 =~ 1 * lx5  dx6 =~ 1 * lx6  dx7 =~ 1 * lx7  dx8 =~ 1 * lx8  dx9 =~ 1 * lx9  dx10 =~ 1 * lx10  # Specify latent change scores means  dx2 ~ 0 * 1  dx3 ~ 0 * 1  dx4 ~ 0 * 1  dx5 ~ 0 * 1  dx6 ~ 0 * 1  dx7 ~ 0 * 1  dx8 ~ 0 * 1  dx9 ~ 0 * 1  dx10 ~ 0 * 1  # Specify latent change scores variances  dx2 ~~ 0 * dx2  dx3 ~~ 0 * dx3  dx4 ~~ 0 * dx4  dx5 ~~ 0 * dx5  dx6 ~~ 0 * dx6  dx7 ~~ 0 * dx7  dx8 ~~ 0 * dx8  dx9 ~~ 0 * dx9  dx10 ~~ 0 * dx10  # Specify constant change factor  g2 =~ 1 * dx2 + 1 * dx3 + 1 * dx4 + 1 * dx5 + 1 * dx6 + 1 * dx7 + 1 * dx8 + 1 * dx9 + 1 * dx10  # Specify constant change factor mean  g2 ~ alpha_g2 * 1  # Specify constant change factor variance  g2 ~~ sigma2_g2 * g2  # Specify constant change factor covariance with the initial true score  g2 ~~ sigma_g2lx1 * lx1 # Specify autoregression of change score  dx3 ~ phi_x * dx2  dx4 ~ phi_x * dx3  dx5 ~ phi_x * dx4  dx6 ~ phi_x * dx5  dx7 ~ phi_x * dx6  dx8 ~ phi_x * dx7  dx9 ~ phi_x * dx8  dx10 ~ phi_x * dx9"},{"path":"https://milanwiedemann.github.io/lcsm/index.html","id":"fit-bivariate-lcsms","dir":"","previous_headings":"How to use lcsm > Fit LCSMs","what":"Fit bivariate LCSMs","title":"Univariate and Bivariate Latent Change Score Modelling","text":"function fit_bi_lcsm() allows specify two univariate LCSMs using arguments model_x model_x. two constructs can connected using coupling argument. details can found help files help(fit_bi_lcsm).","code":"fit_bi_lcsm(data = data_bi_lcsm,              var_x = c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\",                       \"x6\", \"x7\", \"x8\", \"x9\", \"x10\"),             var_y = c(\"y1\", \"y2\", \"y3\", \"y4\", \"y5\",                        \"y6\", \"y7\", \"y8\", \"y9\", \"y10\"),             model_x = list(alpha_constant = TRUE,                             beta = TRUE,                             phi = FALSE),             model_y = list(alpha_constant = TRUE,                             beta = TRUE,                             phi = TRUE),             coupling = list(delta_lag_xy = TRUE,                              xi_lag_yx = TRUE)) #> lavaan 0.6.13 ended normally after 114 iterations #>  #>   Estimator                                         ML #>   Optimization method                           NLMINB #>   Number of model parameters                        87 #>   Number of equality constraints                    65 #>  #>   Number of observations                           500 #>   Number of missing patterns                       210 #>  #> Model Test User Model: #>                                               Standard      Scaled #>   Test Statistic                               191.851     193.021 #>   Degrees of freedom                               208         208 #>   P-value (Chi-square)                           0.782       0.764 #>   Scaling correction factor                                  0.994 #>     Yuan-Bentler correction (Mplus variant)"},{"path":"https://milanwiedemann.github.io/lcsm/index.html","id":"extract-fit-statistics-and-parmeters","dir":"","previous_headings":"How to use lcsm","what":"Extract fit statistics and parmeters","title":"Univariate and Bivariate Latent Change Score Modelling","text":"main underlying functions extract parameters fit statistics come broom package: broom::tidy() broom::glance(). functions extract_param() extract_fit() offer tools find helpful running LCSMs R, example: extract_param(): one row per estimated parameter, extract_fit(): fit statistics multiple lavaan objects can extracted. table description parameters can estimated shown .","code":"# First create a lavaan object bi_lcsm_01 <- fit_bi_lcsm(data = data_bi_lcsm,                            var_x = c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\",                                     \"x6\", \"x7\", \"x8\", \"x9\", \"x10\"),                           var_y = c(\"y1\", \"y2\", \"y3\", \"y4\", \"y5\",                                      \"y6\", \"y7\", \"y8\", \"y9\", \"y10\"),                           model_x = list(alpha_constant = TRUE,                                           beta = TRUE,                                           phi = FALSE),                           model_y = list(alpha_constant = TRUE,                                           beta = TRUE,                                           phi = TRUE),                           coupling = list(delta_lag_xy = TRUE,                                            xi_lag_yx = TRUE))  # Now extract parameter estimates # Only extract first 7 columns for this example by adding [ , 1:7] param_bi_lcsm_01 <- extract_param(bi_lcsm_01, printp = TRUE)[ , 1:7]  # Print table of parameter estimates kable(param_bi_lcsm_01, digits = 3)"},{"path":"https://milanwiedemann.github.io/lcsm/index.html","id":"plot-simplified-path-diagrams-of-lcsms","dir":"","previous_headings":"How to use lcsm","what":"Plot simplified path diagrams of LCSMs","title":"Univariate and Bivariate Latent Change Score Modelling","text":"function work progress can plot univariate bivariate LCSMs specified fit_uni_lcsm() fit_bi_lcsm(). Modified LCSMs probably return errors layout matrix gets created plot function supports specifications can modelled package. input arguments plotting simplified path diagram : estimated lavaan object lavaan_object, lavaan_syntax , lcsm indicating whether LCSMs “univariate” “bivariate” Optional arguments can used change look plot, example: white: observed scores green: latent true scores blue: latent change scores yellow: latent change scores arguments can passed semPlot::semPaths(), example: , “path” show unweighted gray edges, “par” show parameter estimates weighted (green/red) edges whatLabels, “label” show edege names label “est” parameter estimates, “hide” hide edge labels","code":""},{"path":"https://milanwiedemann.github.io/lcsm/index.html","id":"univariate-lcsm","dir":"","previous_headings":"How to use lcsm > Plot simplified path diagrams of LCSMs","what":"Univariate LCSM","title":"Univariate and Bivariate Latent Change Score Modelling","text":"","code":"# Fit bivariate lcsm and save the results  uni_lavaan_results <- fit_uni_lcsm(data = data_uni_lcsm,                                     var = c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\"),                                    model = list(alpha_constant = TRUE,                                                  beta = TRUE,                                                  phi = TRUE)                                   ) #> Warning in lav_data_full(data = data, group = group, cluster = cluster, : lavaan WARNING: some cases are empty and will be ignored: #>   239  # Save the lavaan syntax that is used to create the layout matrix for semPlot uni_lavaan_syntax <- fit_uni_lcsm(data = data_uni_lcsm,                                    var = c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\"),                                   model = list(alpha_constant = TRUE,                                                 beta = TRUE,                                                 phi = TRUE),                                   return_lavaan_syntax = TRUE)  # Plot the results plot_lcsm(lavaan_object = uni_lavaan_results,           lavaan_syntax = uni_lavaan_syntax,           edge.label.cex = .9,             lcsm_colours = TRUE,           lcsm = \"univariate\")"},{"path":"https://milanwiedemann.github.io/lcsm/index.html","id":"bivariate-lcsm","dir":"","previous_headings":"How to use lcsm > Plot simplified path diagrams of LCSMs","what":"Bivariate LCSM","title":"Univariate and Bivariate Latent Change Score Modelling","text":"","code":"# Fit bivariate lcsm and save the results  bi_lavaan_results <- fit_bi_lcsm(data = data_bi_lcsm,                                   var_x = c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\"),                                  var_y = c(\"y1\", \"y2\", \"y3\", \"y4\", \"y5\"),                                  model_x = list(alpha_constant = TRUE,                                                  beta = TRUE,                                                  phi = FALSE),                                  model_y = list(alpha_constant = TRUE,                                                  beta = TRUE,                                                  phi = TRUE),                                  coupling = list(delta_lag_xy = TRUE,                                                   xi_lag_yx = TRUE))  # Save the lavaan syntax that is used to create the layout matrix for semPlot bi_lavaan_syntax <- fit_bi_lcsm(data = data_bi_lcsm,                                  var_x = c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\"),                                 var_y = c(\"y1\", \"y2\", \"y3\", \"y4\", \"y5\"),                                 model_x = list(alpha_constant = TRUE,                                                 beta = TRUE,                                                 phi = FALSE),                                 model_y = list(alpha_constant = TRUE,                                                 beta = TRUE,                                                 phi = TRUE),                                 coupling = list(delta_lag_xy = TRUE,                                                  xi_lag_yx = TRUE),                                 return_lavaan_syntax = TRUE)  # Plot the results plot_lcsm(lavaan_object = bi_lavaan_results,            lavaan_syntax = bi_lavaan_syntax,           lcsm_colours = TRUE,           whatLabels = \"hide\",           lcsm = \"bivariate\")"},{"path":"https://milanwiedemann.github.io/lcsm/index.html","id":"simulate-data","dir":"","previous_headings":"How to use lcsm","what":"Simulate data","title":"Univariate and Bivariate Latent Change Score Modelling","text":"functions sim_uni_lcsm() sim_bi_lcsm() simulate data based parameters can specified. See tables full list parameters can specified data simulation. also possible return lavaan syntax instead simulating data manual specifications. modified object used simulate data using lavaan::simulateData().","code":"# Simulate some data  sim_uni_lcsm(timepoints = 5,               model = list(alpha_constant = TRUE, beta = FALSE, phi = TRUE),               model_param = list(gamma_lx1 = 21,                                  sigma2_lx1 = 1.5,                                 sigma2_ux = 0.2,                                 alpha_j2 = -0.93,                                 sigma2_j2 = 0.1,                                 sigma_j2lx1 = 0.2,                                 phi_x = 0.3),              sample.nobs = 1000,              na_pct = 0.3) #> Parameter estimates for the data simulation are taken from the argument 'model_param'. #> Warning: The following parameters are specified in the LCSM but no parameter estimates have been entered in 'model_param': #> -  alpha_g2 #> -  sigma2_g2 #> -  sigma_g2lx1 #> # A tibble: 1,000 × 6 #>       id    x1    x2    x3    x4    x5 #>    <int> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1     1  21.8  20.4  18.0  15.3  NA   #>  2     2  22.5  22.7  NA    19.0  NA   #>  3     3  22.3  21.4  20.5  18.8  18.5 #>  4     4  NA    NA    21.9  25.0  25.9 #>  5     5  18.8  18.4  18.9  18.8  NA   #>  6     6  20.0  19.1  17.1  15.5  13.8 #>  7     7  20.1  18.6  16.9  NA    NA   #>  8     8  22.3  23.2  22.6  23.6  25.3 #>  9     9  18.7  NA    19.3  19.5  19.8 #> 10    10  NA    22.3  NA    22.2  22.4 #> # … with 990 more rows # Return lavaan syntax based on the following argument specifications simsyntax <- sim_bi_lcsm(timepoints = 5,                           model_x = list(alpha_constant = TRUE, beta = TRUE, phi = FALSE),                          model_x_param = list(gamma_lx1 = 21,                                               sigma2_lx1 = .5,                                               sigma2_ux = .2,                                               alpha_g2 = -.4,                                               sigma2_g2 = .4,                                               sigma_g2lx1 = .2,                                               beta_x = -.1),                          model_y = list(alpha_constant = TRUE, beta = TRUE, phi = TRUE),                          model_y_param = list(gamma_ly1 = 5,                                               sigma2_ly1 = .2,                                               sigma2_uy = .2,                                               alpha_j2 = -.2,                                               sigma2_j2 = .1,                                               sigma_j2ly1 = .02,                                               beta_y = -.2,                                               phi_y = .1),                          coupling = list(delta_lag_xy = TRUE,                                           xi_lag_yx = TRUE),                          coupling_param = list(sigma_su = .01,                                                sigma_ly1lx1 = .2,                                                sigma_g2ly1 = .1,                                                sigma_j2lx1 = .1,                                                sigma_j2g2 = .01,                                                delta_lag_xy = .13,                                                xi_lag_yx = .4),                          return_lavaan_syntax = TRUE) # Specify parameters for construct x ---- # Specify latent true scores  lx1 =~ 1 * x1  lx2 =~ 1 * x2  lx3 =~ 1 * x3  lx4 =~ 1 * x4  lx5 =~ 1 * x5  # Specify mean of latent true scores  lx1 ~ 21 * 1  lx2 ~ 0 * 1  lx3 ~ 0 * 1  lx4 ~ 0 * 1  lx5 ~ 0 * 1  # Specify variance of latent true scores  lx1 ~~ 0.5 * lx1  lx2 ~~ 0 * lx2  lx3 ~~ 0 * lx3  lx4 ~~ 0 * lx4  lx5 ~~ 0 * lx5  # Specify intercept of obseved scores  x1 ~ 0 * 1  x2 ~ 0 * 1  x3 ~ 0 * 1  x4 ~ 0 * 1  x5 ~ 0 * 1  # Specify variance of observed scores  x1 ~~ 0.2 * x1  x2 ~~ 0.2 * x2  x3 ~~ 0.2 * x3  x4 ~~ 0.2 * x4  x5 ~~ 0.2 * x5  # Specify autoregressions of latent variables  lx2 ~ 1 * lx1  lx3 ~ 1 * lx2  lx4 ~ 1 * lx3  lx5 ~ 1 * lx4  # Specify latent change scores  dx2 =~ 1 * lx2  dx3 =~ 1 * lx3  dx4 =~ 1 * lx4  dx5 =~ 1 * lx5  # Specify latent change scores means  dx2 ~ 0 * 1  dx3 ~ 0 * 1  dx4 ~ 0 * 1  dx5 ~ 0 * 1  # Specify latent change scores variances  dx2 ~~ 0 * dx2  dx3 ~~ 0 * dx3  dx4 ~~ 0 * dx4  dx5 ~~ 0 * dx5  # Specify constant change factor  g2 =~ 1 * dx2 + 1 * dx3 + 1 * dx4 + 1 * dx5  # Specify constant change factor mean  g2 ~ -0.4 * 1  # Specify constant change factor variance  g2 ~~ 0.4 * g2  # Specify constant change factor covariance with the initial true score  g2 ~~ 0.2 * lx1 # Specify proportional change component  dx2 ~ -0.1 * lx1  dx3 ~ -0.1 * lx2  dx4 ~ -0.1 * lx3  dx5 ~ -0.1 * lx4  # Specify parameters for construct y ---- # Specify latent true scores  ly1 =~ 1 * y1  ly2 =~ 1 * y2  ly3 =~ 1 * y3  ly4 =~ 1 * y4  ly5 =~ 1 * y5  # Specify mean of latent true scores  ly1 ~ 5 * 1  ly2 ~ 0 * 1  ly3 ~ 0 * 1  ly4 ~ 0 * 1  ly5 ~ 0 * 1  # Specify variance of latent true scores  ly1 ~~ 0.2 * ly1  ly2 ~~ 0 * ly2  ly3 ~~ 0 * ly3  ly4 ~~ 0 * ly4  ly5 ~~ 0 * ly5  # Specify intercept of obseved scores  y1 ~ 0 * 1  y2 ~ 0 * 1  y3 ~ 0 * 1  y4 ~ 0 * 1  y5 ~ 0 * 1  # Specify variance of observed scores  y1 ~~ 0.2 * y1  y2 ~~ 0.2 * y2  y3 ~~ 0.2 * y3  y4 ~~ 0.2 * y4  y5 ~~ 0.2 * y5  # Specify autoregressions of latent variables  ly2 ~ 1 * ly1  ly3 ~ 1 * ly2  ly4 ~ 1 * ly3  ly5 ~ 1 * ly4  # Specify latent change scores  dy2 =~ 1 * ly2  dy3 =~ 1 * ly3  dy4 =~ 1 * ly4  dy5 =~ 1 * ly5  # Specify latent change scores means  dy2 ~ 0 * 1  dy3 ~ 0 * 1  dy4 ~ 0 * 1  dy5 ~ 0 * 1  # Specify latent change scores variances  dy2 ~~ 0 * dy2  dy3 ~~ 0 * dy3  dy4 ~~ 0 * dy4  dy5 ~~ 0 * dy5  # Specify constant change factor  j2 =~ 1 * dy2 + 1 * dy3 + 1 * dy4 + 1 * dy5  # Specify constant change factor mean  j2 ~ -0.2 * 1  # Specify constant change factor variance  j2 ~~ 0.1 * j2  # Specify constant change factor covariance with the initial true score  j2 ~~ 0.02 * ly1 # Specify proportional change component  dy2 ~ -0.2 * ly1  dy3 ~ -0.2 * ly2  dy4 ~ -0.2 * ly3  dy5 ~ -0.2 * ly4  # Specify autoregression of change score  dy3 ~ 0.1 * dy2  dy4 ~ 0.1 * dy3  dy5 ~ 0.1 * dy4  # Specify residual covariances  x1 ~~ 0.01 * y1  x2 ~~ 0.01 * y2  x3 ~~ 0.01 * y3  x4 ~~ 0.01 * y4  x5 ~~ 0.01 * y5  # Specify covariances betweeen specified change components (alpha) and intercepts (initial latent true scores lx1 and ly1) ---- # Specify covariance of intercepts  lx1 ~~ 0.2 * ly1  # Specify covariance of constant change and intercept within the same construct  ly1 ~~ 0.1 * g2  # Specify covariance of constant change and intercept within the same construct  lx1 ~~ 0.1 * j2  # Specify covariance of constant change factors between constructs  g2 ~~ 0.01 * j2  # Specify between-construct coupling parameters ---- # Change score x (t) is determined by true score y (t-1)   dx2 ~ 0.13 * ly1  dx3 ~ 0.13 * ly2  dx4 ~ 0.13 * ly3  dx5 ~ 0.13 * ly4  # Change score y (t) is determined by change score x (t-1)   dy3 ~ 0.4 * dx2  dy4 ~ 0.4 * dx3  dy5 ~ 0.4 * dx4"},{"path":"https://milanwiedemann.github.io/lcsm/reference/data_bi_lcsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Longitudinal dataset with repeated measures of two constructs — data_bi_lcsm","title":"Longitudinal dataset with repeated measures of two constructs — data_bi_lcsm","text":"Example dataset repeated measures two constructs illustrate package works.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/data_bi_lcsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Longitudinal dataset with repeated measures of two constructs — data_bi_lcsm","text":"","code":"data(data_bi_lcsm)"},{"path":"https://milanwiedemann.github.io/lcsm/reference/data_bi_lcsm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Longitudinal dataset with repeated measures of two constructs — data_bi_lcsm","text":"longitudinal dataset wide format: id: ID variable, unique identifier person x1: x value time point 1 x2: x value time point 2 x3: x value time point 3 x4: x value time point 4 x5: x value time point 5 x6: x value time point 6 x7: x value time point 7 x8: x value time point 8 x9: x value time point 9 x10: x value time point 10 y1: y value time point 1 y2: y value time point 2 y3: y value time point 3 y4: y value time point 4 y5: y value time point 5 y6: y value time point 6 y7: y value time point 7 y8: y value time point 8 y9: y value time point 9 y10: y value time point 10","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/data_bi_lcsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Longitudinal dataset with repeated measures of two constructs — data_bi_lcsm","text":"","code":"# Load data into global environment data(data_bi_lcsm)"},{"path":"https://milanwiedemann.github.io/lcsm/reference/data_uni_lcsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Longitudinal dataset with repeated measures of one constructs — data_uni_lcsm","title":"Longitudinal dataset with repeated measures of one constructs — data_uni_lcsm","text":"Example dataset repeated measures one constructs illustrate package works.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/data_uni_lcsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Longitudinal dataset with repeated measures of one constructs — data_uni_lcsm","text":"","code":"data(data_uni_lcsm)"},{"path":"https://milanwiedemann.github.io/lcsm/reference/data_uni_lcsm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Longitudinal dataset with repeated measures of one constructs — data_uni_lcsm","text":"longitudinal dataset wide format: id: ID variable, unique identifier person x1: x value time point 1 x2: x value time point 2 x3: x value time point 3 x4: x value time point 4 x5: x value time point 5 x6: x value time point 6 x7: x value time point 7 x8: x value time point 8 x9: x value time point 9 x10: x value time point 10","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/data_uni_lcsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Longitudinal dataset with repeated measures of one constructs — data_uni_lcsm","text":"","code":"# Load data into global environment data(data_uni_lcsm)"},{"path":"https://milanwiedemann.github.io/lcsm/reference/extract_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract fit statistics of lavaan objects — extract_fit","title":"Extract fit statistics of lavaan objects — extract_fit","text":"Extract fit statistics lavaan objects","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/extract_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract fit statistics of lavaan objects — extract_fit","text":"","code":"extract_fit(..., details = FALSE)"},{"path":"https://milanwiedemann.github.io/lcsm/reference/extract_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract fit statistics of lavaan objects — extract_fit","text":"... lavaan object(s) details Logical, TRUE return fit statistics. default set FALSE, selection (chisq, npar, aic, bic, cfi, rmsea, srmr) fit statistics returned.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/extract_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract fit statistics of lavaan objects — extract_fit","text":"function returns tibble.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/extract_fit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract fit statistics of lavaan objects — extract_fit","text":"David Robinson Alex Hayes (2019). broom: Convert Statistical Analysis Objects Tidy Tibbles. R package version 0.5.2. https://CRAN.R-project.org/package=broom/.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/extract_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract fit statistics of lavaan objects — extract_fit","text":"","code":"# First create a lavaan object if (FALSE) { bi_lcsm_01 <- fit_bi_lcsm(data = data_bi_lcsm,                            var_x = names(data_bi_lcsm)[2:4],                            var_y = names(data_bi_lcsm)[12:14],                           model_x = list(alpha_constant = TRUE,                                           beta = TRUE,                                           phi = FALSE),                           model_y = list(alpha_constant = TRUE,                                           beta = TRUE,                                           phi = TRUE),                           coupling = list(delta_lag_xy = TRUE,                                            xi_lag_yx = TRUE)                                           )  # Now extract fit statistics    extract_fit(bi_lcsm_01) }"},{"path":"https://milanwiedemann.github.io/lcsm/reference/extract_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract labelled parameters of lavaan objects — extract_param","title":"Extract labelled parameters of lavaan objects — extract_param","text":"Extract labelled parameters lavaan objects","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/extract_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract labelled parameters of lavaan objects — extract_param","text":"","code":"extract_param(lavaan_object, printp = FALSE)"},{"path":"https://milanwiedemann.github.io/lcsm/reference/extract_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract labelled parameters of lavaan objects — extract_param","text":"lavaan_object lavaan object. printp TRUE convert easily readable p values.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/extract_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract labelled parameters of lavaan objects — extract_param","text":"function returns tibble labelled parameters.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/extract_param.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract labelled parameters of lavaan objects — extract_param","text":"David Robinson Alex Hayes (2019). broom: Convert Statistical Analysis Objects Tidy Tibbles. R package version 0.5.2. https://CRAN.R-project.org/package=broom/","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/extract_param.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract labelled parameters of lavaan objects — extract_param","text":"","code":"# First create a lavaan object bi_lcsm_01 <- fit_bi_lcsm(data = data_bi_lcsm,                            var_x = names(data_bi_lcsm)[2:4],                            var_y = names(data_bi_lcsm)[12:14],                           model_x = list(alpha_constant = TRUE,                                           beta = TRUE,                                           phi = FALSE),                           model_y = list(alpha_constant = TRUE,                                           beta = TRUE,                                           phi = TRUE),                           coupling = list(delta_lag_xy = TRUE,                                            xi_lag_yx = TRUE)                                           ) #> Warning: lavaan WARNING: #>     The variance-covariance matrix of the estimated parameters (vcov) #>     does not appear to be positive definite! The smallest eigenvalue #>     (= 1.264160e-15) is close to zero. This may be a symptom that the #>     model is not identified.  # Now extract parameter estimates               extract_param(bi_lcsm_01) #> # A tibble: 22 × 8 #>    label       estimate std.error statistic    p.value std.lv std.all std.nox #>    <chr>          <dbl>     <dbl>     <dbl>      <dbl>  <dbl>   <dbl>   <dbl> #>  1 gamma_lx1    21.1       0.0377   560.    0          29.3    29.3    29.3   #>  2 sigma2_lx1    0.517     0.0417    12.4   0           1       1       1     #>  3 sigma2_ux     0.171     0.0109    15.6   0           0.171   0.248   0.248 #>  4 alpha_g2     -0.250     0.856     -0.292 0.770      -0.383  -0.383  -0.383 #>  5 sigma2_g2     0.426     0.0455     9.38  0           1       1       1     #>  6 sigma_g2lx1   0.143     0.0300     4.76  0.00000193  0.304   0.304   0.304 #>  7 beta_x       -0.0905    0.0642    -1.41  0.159      -0.101  -0.101  -0.101 #>  8 gamma_ly1     5.03      0.0300   168.    0          10.4    10.4    10.4   #>  9 sigma2_ly1    0.235     0.0275     8.53  0           1       1       1     #> 10 sigma2_uy     0.177     0.0118    15.0   0           0.177   0.429   0.429 #> # … with 12 more rows"},{"path":"https://milanwiedemann.github.io/lcsm/reference/fit_bi_lcsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit bivariate latent change score models — fit_bi_lcsm","title":"Fit bivariate latent change score models — fit_bi_lcsm","text":"Fit bivariate latent change score models.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/fit_bi_lcsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit bivariate latent change score models — fit_bi_lcsm","text":"","code":"fit_bi_lcsm(   data,   var_x,   var_y,   model_x,   model_y,   coupling,   add = NULL,   mimic = \"Mplus\",   estimator = \"MLR\",   missing = \"FIML\",   return_lavaan_syntax = FALSE,   ... )"},{"path":"https://milanwiedemann.github.io/lcsm/reference/fit_bi_lcsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit bivariate latent change score models — fit_bi_lcsm","text":"data Wide dataset. var_x List variables measuring one construct model. var_y List variables measuring another construct model. model_x List model specifications (logical) variables specified var_x. alpha_constant (Constant change factor), alpha_piecewise (Piecewise constant change factors), alpha_piecewise_num (Changepoint piecewise constant change factors. example 10 repeated measurements, setting alpha_piecewise_num 5 estimate two seperate constant change factors, first one changes timepoint 5, second one changes timepoint 5 onwards (example timepoint 10)., alpha_linear (Linear change factor), beta (Proportional change factor), phi (Autoregression change scores). model_y List model specifications variables specified var_y. alpha_constant (Constant change factor), alpha_piecewise (Piecewise constant change factors), alpha_piecewise_num (Changepoint piecewise constant change factors. example 10 repeated measurements, setting alpha_piecewise_num 5 estimate two seperate constant change factors, first one changes timepoint 5, second one changes timepoint 5 onwards (example timepoint 10)., alpha_linear (Linear change factor), beta (Proportional change factor), phi (Autoregression change scores). coupling List model specifications (logical) coupling parameters. coupling_piecewise (Piecewise coupling parameters), coupling_piecewise_num (Changepoint piecewise coupling parameters), delta_xy (True score y predicting subsequent change score x), delta_yx (True score x predicting subsequent change score y), xi_xy (Change score y predicting subsequent change score x), xi_yx (Change score x predicting subsequent change score y). add String, lavaan syntax added model mimic See mimic argument lavOptions. estimator See estimator argument lavOptions. missing See missing argument lavOptions. return_lavaan_syntax Logical, TRUE return lavaan syntax used simulating data. make look beautiful use function cat. ... Additional arguments passed lavOptions.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/fit_bi_lcsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit bivariate latent change score models — fit_bi_lcsm","text":"function returns lavaan class object.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/fit_bi_lcsm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit bivariate latent change score models — fit_bi_lcsm","text":"Ghisletta, P., & McArdle, J. J. (2012). Latent Curve Models Latent Change Score Models Estimated R. Structural Equation Modeling: Multidisciplinary Journal, 19(4), 651–682. doi:10.1146/annurev.psych.60.110707.163612 . Grimm, K. J., Ram, N., & Estabrook, R. (2017). Growth Modeling—Structural Equation Multilevel Modeling Approaches. New York: Guilford Press. McArdle, J. J. (2009). Latent variable modeling differences changes longitudinal data. Annual Review Psychology, 60(1), 577–605. doi:10.1146/annurev.psych.60.110707.163612 . Yves Rosseel (2012). lavaan: R Package Structural Equation Modeling. Journal Statistical Software, 48(2), 1-36. doi:10.18637/jss.v048.i02 .","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/fit_bi_lcsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit bivariate latent change score models — fit_bi_lcsm","text":"","code":"# Fit  fit_bi_lcsm(data = data_bi_lcsm,              var_x = names(data_bi_lcsm)[2:4],              var_y = names(data_bi_lcsm)[12:14],             model_x = list(alpha_constant = TRUE,                             beta = TRUE,                             phi = FALSE),             model_y = list(alpha_constant = TRUE,                             beta = TRUE,                             phi = TRUE),             coupling = list(delta_lag_xy = TRUE,                              xi_lag_yx = TRUE)                             ) #> Warning: lavaan WARNING: #>     The variance-covariance matrix of the estimated parameters (vcov) #>     does not appear to be positive definite! The smallest eigenvalue #>     (= 1.264160e-15) is close to zero. This may be a symptom that the #>     model is not identified. #> lavaan 0.6.14 ended normally after 137 iterations #>  #>   Estimator                                         ML #>   Optimization method                           NLMINB #>   Number of model parameters                        31 #>   Number of equality constraints                     9 #>  #>   Number of observations                           500 #>   Number of missing patterns                        23 #>  #> Model Test User Model: #>                                               Standard      Scaled #>   Test Statistic                                 6.870       5.971 #>   Degrees of freedom                                 5           5 #>   P-value (Chi-square)                           0.230       0.309 #>   Scaling correction factor                                  1.151 #>     Yuan-Bentler correction (Mplus variant)"},{"path":"https://milanwiedemann.github.io/lcsm/reference/fit_uni_lcsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit univariate latent change score models — fit_uni_lcsm","title":"Fit univariate latent change score models — fit_uni_lcsm","text":"Fit univariate latent change score models.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/fit_uni_lcsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit univariate latent change score models — fit_uni_lcsm","text":"","code":"fit_uni_lcsm(   data,   var,   model,   add = NULL,   mimic = \"Mplus\",   estimator = \"MLR\",   missing = \"FIML\",   return_lavaan_syntax = FALSE,   ... )"},{"path":"https://milanwiedemann.github.io/lcsm/reference/fit_uni_lcsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit univariate latent change score models — fit_uni_lcsm","text":"data data frame \"wide\" format, .e. one column measurement point one row observation. var Vector, specifying variable names measurement point sequentially. model List model specifications (logical) variables specified var. alpha_constant (Constant change factor) alpha_piecewise (Piecewise constant change factors) alpha_piecewise_num (Changepoint piecewise constant change factors. example 10 repeated measurements, setting alpha_piecewise_num 5 estimate two seperate constant change factors, first one changes timepoint 5, second one changes timepoint 5 onwards (example timepoint 10)., alpha_linear (Linear change factor) beta (Proportional change factor) phi (Autoregression change scores) add String, lavaan syntax added model mimic See mimic argument lavOptions. estimator See estimator argument lavOptions. missing See missing argument lavOptions. return_lavaan_syntax Logical, TRUE return lavaan syntax used simulating data. make look beautiful use function cat. ... Additional arguments passed lavOptions.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/fit_uni_lcsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit univariate latent change score models — fit_uni_lcsm","text":"function returns lavaan class object.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/fit_uni_lcsm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit univariate latent change score models — fit_uni_lcsm","text":"Ghisletta, P., & McArdle, J. J. (2012). Latent Curve Models Latent Change Score Models Estimated R. Structural Equation Modeling: Multidisciplinary Journal, 19(4), 651–682. doi:10.1080/10705511.2012.713275. Grimm, K. J., Ram, N., & Estabrook, R. (2017). Growth Modeling—Structural Equation Multilevel Modeling Approaches. New York: Guilford Press. McArdle, J. J. (2009). Latent variable modeling differences changes longitudinal data. Annual Review Psychology, 60(1), 577–605. doi:10.1146/annurev.psych.60.110707.163612 . Yves Rosseel (2012). lavaan: R Package Structural Equation Modeling. Journal Statistical Software, 48(2), 1-36. doi:10.18637/jss.v048.i02 .","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/fit_uni_lcsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit univariate latent change score models — fit_uni_lcsm","text":"","code":"# Fit univariate latent change score model fit_uni_lcsm(data = data_uni_lcsm,               var = names(data_uni_lcsm)[2:4],              model = list(alpha_constant = TRUE,                            beta = FALSE,                            phi = FALSE)) #> Warning: lavaan WARNING: some cases are empty and will be ignored: #>   179 223 239 258 306 359 430 #> lavaan 0.6.14 ended normally after 61 iterations #>  #>   Estimator                                         ML #>   Optimization method                           NLMINB #>   Number of model parameters                         8 #>   Number of equality constraints                     2 #>  #>                                                   Used       Total #>   Number of observations                           493         500 #>   Number of missing patterns                         7             #>  #> Model Test User Model: #>                                               Standard      Scaled #>   Test Statistic                                 0.703       0.704 #>   Degrees of freedom                                 3           3 #>   P-value (Chi-square)                           0.873       0.872 #>   Scaling correction factor                                  0.998 #>     Yuan-Bentler correction (Mplus variant)"},{"path":"https://milanwiedemann.github.io/lcsm/reference/lcsm_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Longitudinal dataset with repeated measures of two constructs — lcsm_data","title":"Longitudinal dataset with repeated measures of two constructs — lcsm_data","text":"Example dataset 5 repeated measures two constructs illustrate package works.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/lcsm_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Longitudinal dataset with repeated measures of two constructs — lcsm_data","text":"","code":"data(lcsm_data)"},{"path":"https://milanwiedemann.github.io/lcsm/reference/lcsm_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Longitudinal dataset with repeated measures of two constructs — lcsm_data","text":"longitudinal dataset wide format: id: ID variable, unique identifier person x1: x value time point 1 x2: x value time point 2 x3: x value time point 3 x4: x value time point 4 x5: x value time point 5 y1: y value time point 1 y2: y value time point 2 y3: y value time point 3 y4: y value time point 4 y5: y value time point 5","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/lcsm_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Longitudinal dataset with repeated measures of two constructs — lcsm_data","text":"","code":"# Load data into global environment data(lcsm_data)"},{"path":"https://milanwiedemann.github.io/lcsm/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"Pipe operator","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://milanwiedemann.github.io/lcsm/reference/plot_lcsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot simplified path diagram of univariate and bivariate latent change score models — plot_lcsm","title":"Plot simplified path diagram of univariate and bivariate latent change score models — plot_lcsm","text":"Note following three arguments needed create plot (see details): lavaan_object: lavaan fit object needs specified together lcsm: string indicating whether latent change score model \"univariate\" \"bivariate\", lavaan_syntax: separate object lavaan syntax string","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/plot_lcsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot simplified path diagram of univariate and bivariate latent change score models — plot_lcsm","text":"","code":"plot_lcsm(   lavaan_object,   layout = NULL,   lavaan_syntax = NULL,   return_layout_from_lavaan_syntax = FALSE,   lcsm = c(\"univariate\", \"bivariate\"),   lcsm_colours = FALSE,   curve_covar = 0.5,   what = \"path\",   whatLabels = \"est\",   edge.width = 1,   node.width = 1,   border.width = 1,   fixedStyle = 1,   freeStyle = 1,   residuals = FALSE,   label.scale = FALSE,   sizeMan = 3,   sizeLat = 5,   intercepts = FALSE,   fade = FALSE,   nCharNodes = 0,   nCharEdges = 0,   edge.label.cex = 0.5,   ... )"},{"path":"https://milanwiedemann.github.io/lcsm/reference/plot_lcsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot simplified path diagram of univariate and bivariate latent change score models — plot_lcsm","text":"lavaan_object lavaan object univariate bivariate latent change score model. layout Matrix, specifying number location manifest latent variables LCS model specified  lavaan_object. lavaan_syntax String, lavaan syntax lavaan object specified lavaan_object. lavaan_syntax provided layout matrix generated automatically. return_layout_from_lavaan_syntax Logical, TRUE lavaan_syntax provided, layout matrix generated semPaths returned inspection customisation. lcsm String, specifying whether lavaan_object represent \"univariate\" \"bivariate\" LCS model. lcsm_colours Logical, TRUE following colours used highlight different parts model: Observed variables (White); Latent true scores (Green); Latent change scores (Blue) ; Change factors (Yellow). curve_covar See semPaths. See semPlot. \"path\" show unweighted grey edges, \"par\" show parameter estimates weighted (green/red) edges whatLabels See semPaths. \"label\" show edge names label, \"est\" parameter estimates, \"hide\" hide edge labels. edge.width See semPaths. node.width See semPaths. border.width See semPaths. fixedStyle See semPaths. freeStyle See semPaths. residuals See semPaths. label.scale See semPaths. sizeMan See semPaths. sizeLat See semPaths. intercepts See semPaths. fade See semPaths. nCharNodes See semPaths. nCharEdges See semPaths. edge.label.cex See semPaths. ... arguments passed semPaths.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/plot_lcsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot simplified path diagram of univariate and bivariate latent change score models — plot_lcsm","text":"Plot","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/plot_lcsm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot simplified path diagram of univariate and bivariate latent change score models — plot_lcsm","text":"Sacha Epskamp (2019). semPlot: Path Diagrams Visual Analysis Various SEM Packages' Output. R package version 1.1.1. https://CRAN.R-project.org/package=semPlot/","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/plot_lcsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot simplified path diagram of univariate and bivariate latent change score models — plot_lcsm","text":"","code":"# Simplified plot of univariate lcsm lavaan_syntax_uni <- fit_uni_lcsm(   data = data_bi_lcsm,   var = c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\"),   model = list(     alpha_constant = TRUE,     beta = TRUE,     phi = TRUE   ),   return_lavaan_syntax = TRUE,   return_lavaan_syntax_string = TRUE )  lavaan_object_uni <- fit_uni_lcsm(   data = data_bi_lcsm,   var = c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\"),   model = list(     alpha_constant = TRUE,     beta = TRUE,     phi = TRUE   ) )  plot_lcsm(   lavaan_object = lavaan_object_uni,   what = \"cons\", whatLabels = \"invisible\",   lavaan_syntax = lavaan_syntax_uni,   lcsm = \"univariate\" )  if (FALSE) { # Simplified plot of bivariate lcsm lavaan_syntax_bi <- fit_bi_lcsm(   data = data_bi_lcsm,   var_x = c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\"),   var_y = c(\"y1\", \"y2\", \"y3\", \"y4\", \"y5\"),   model_x = list(     alpha_constant = TRUE,     beta = TRUE,     phi = TRUE   ),   model_y = list(     alpha_constant = TRUE,     beta = TRUE,     phi = TRUE   ),   coupling = list(     delta_lag_xy = TRUE,     delta_lag_yx = TRUE   ),   return_lavaan_syntax = TRUE,   return_lavaan_syntax_string = TRUE )  lavaan_object_bi <- fit_bi_lcsm(   data = data_bi_lcsm,   var_x = c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\"),   var_y = c(\"y1\", \"y2\", \"y3\", \"y4\", \"y5\"),   model_x = list(     alpha_constant = TRUE,     beta = TRUE,     phi = TRUE   ),   model_y = list(     alpha_constant = TRUE,     beta = TRUE,     phi = TRUE   ),   coupling = list(     delta_lag_xy = TRUE,     delta_lag_yx = TRUE   ) )  plot_lcsm(   lavaan_object = lavaan_object_bi,   what = \"cons\", whatLabels = \"invisible\",   lavaan_syntax = lavaan_syntax_bi,   lcsm = \"bivariate\" ) }"},{"path":"https://milanwiedemann.github.io/lcsm/reference/plot_trajectories.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot individual trajectories — plot_trajectories","title":"Plot individual trajectories — plot_trajectories","text":"Plot individual trajectories","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/plot_trajectories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot individual trajectories — plot_trajectories","text":"","code":"plot_trajectories(   data,   id_var,   var_list,   line_colour = \"blue\",   group_var = NULL,   point_colour = \"black\",   line_alpha = 0.2,   point_alpha = 0.2,   point_size = 1,   smooth = FALSE,   smooth_method = \"loess\",   smooth_se = FALSE,   xlab = \"X\",   ylab = \"Y\",   scale_x_num = FALSE,   scale_x_num_start = 1,   random_sample_frac = 1,   seed = 1234,   title_n = FALSE,   connect_missing = TRUE )"},{"path":"https://milanwiedemann.github.io/lcsm/reference/plot_trajectories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot individual trajectories — plot_trajectories","text":"data Dataset wide format. id_var String, specifying id variable. var_list Vector, specifying variable names plotted sequential order. line_colour String, specifying colour lines. group_var String, specifying variable name group, group get individual colour lines. overwrites line_colour argument. Also consider options look trajectories like facet_wrap may appropriate. point_colour String, specifying, colour points. line_alpha Numeric, specifying alpha lines. point_alpha Numeric, specifying alpha points. point_size Numeric, size  point smooth Logical, add smoothed conditional means using geom_smooth. smooth_method String, specifying method used calculating average line, see geom_smooth. smooth_se Logical, specifying whether add standard error average line . xlab String x axis label. ylab String y axis label. scale_x_num Logical, TRUE print sequential numbers starting 1 x axis labels, FALSE use variable names. scale_x_num_start Numeric, scale_x_num = TRUE starting value x axis. random_sample_frac fraction rows select (wide dataset), default set 1 (100 percent) sample. seed Set seed random sample random_sample_frac argument used. title_n Logical, specifying whether print title number percentage cases used plot. connect_missing Logical, specifying whether connect points id_var across missing values.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/plot_trajectories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot individual trajectories — plot_trajectories","text":"ggplot2 object","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/plot_trajectories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot individual trajectories — plot_trajectories","text":"","code":"# Create plot for construct x plot_trajectories(data = data_bi_lcsm,                   id_var = \"id\",                    var_list = c(\"x1\", \"x2\", \"x3\", \"x4\", \"x5\",                                 \"x6\", \"x7\", \"x8\", \"x9\", \"x10\")) #> Warning: Removed 260 rows containing missing values (`geom_point()`).   # Create plot for construct y specifying some ather arguments plot_trajectories(data = data_bi_lcsm,                   id_var = \"id\",                    var_list = c(\"y1\", \"y2\", \"y3\", \"y4\", \"y5\",                                 \"y6\", \"y7\", \"y8\", \"y9\", \"y10\"),                   xlab = \"Time\", ylab = \"Y Score\",                   connect_missing = FALSE, random_sample_frac = 0.5) #> Warning: Removed 58 rows containing missing values (`geom_line()`). #> Warning: Removed 270 rows containing missing values (`geom_point()`)."},{"path":"https://milanwiedemann.github.io/lcsm/reference/rename_lcsm_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename variables for univariate and bivariate latent change score models — rename_lcsm_vars","title":"Rename variables for univariate and bivariate latent change score models — rename_lcsm_vars","text":"Rename variables univariate bivariate latent change score models","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/rename_lcsm_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename variables for univariate and bivariate latent change score models — rename_lcsm_vars","text":"","code":"rename_lcsm_vars(data, var_x, var_y)"},{"path":"https://milanwiedemann.github.io/lcsm/reference/rename_lcsm_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename variables for univariate and bivariate latent change score models — rename_lcsm_vars","text":"data Dataset wide format var_x List variables measuring first construct var_y List variables measuring second construct","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/rename_lcsm_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename variables for univariate and bivariate latent change score models — rename_lcsm_vars","text":"Dataset wide format renamed variables","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/select_bi_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Select cases based on minimum number of available session scores on two longitudinal measures — select_bi_cases","title":"Select cases based on minimum number of available session scores on two longitudinal measures — select_bi_cases","text":"Select cases based minimum number available session scores two longitudinal measures","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/select_bi_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select cases based on minimum number of available session scores on two longitudinal measures — select_bi_cases","text":"","code":"select_bi_cases(data, id_var, var_list_x, var_list_y, min_count_x, min_count_y)"},{"path":"https://milanwiedemann.github.io/lcsm/reference/select_bi_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select cases based on minimum number of available session scores on two longitudinal measures — select_bi_cases","text":"data data frame \"wide\" format, .e. one column measurement point one row observation. id_var String, specifying id variable. var_list_x Vector, specifying variable names construct X sequential order. var_list_y Vector, specifying variable names construct Y sequential order. min_count_x Numeric, specifying minimum number available scores construct X. min_count_y Numeric, specifying minimum number available scores construct Y.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/select_bi_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select cases based on minimum number of available session scores on two longitudinal measures — select_bi_cases","text":"tibble","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/select_bi_cases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select cases based on minimum number of available session scores on two longitudinal measures — select_bi_cases","text":"","code":"select_bi_cases(data_bi_lcsm,   id_var = \"id\",   var_list_x = names(data_bi_lcsm)[2:11],   var_list_y = names(data_bi_lcsm)[12:21],   min_count_x = 7,   min_count_y = 7 ) #> # A tibble: 493 × 21 #>       id    x1    x2    x3    x4    x5    x6    x7    x8    x9   x10    y1    y2 #>    <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1     1  21.1  21.4  20.5  19.4  18.4 17.1  NA    13.7  14.1  12.1   6.23  4.93 #>  2     2  20.8  20.3  19.7  18.1  17.1 16.6  14.2  12.8  12.8  11.4   4.86  4.24 #>  3     3  20.5  19.1  16.5  15.5  13.7 11.1   9.65  7.80  7.37  4.61  4.99  4.14 #>  4     4  21.7  21.3  19.1  18.8  18.0 17.9  16.0  15.3  14.5  12.7   4.71  4.76 #>  5     5  20.3  19.0  16.9  13.9  12.6 10.3   8.27  6.36 NA     2.56  3.87  4.33 #>  6     6  22.0  20.9  19.2  17.8  17.3 15.6  NA    14.0  13.5  12.9   4.53  2.83 #>  7     7  21.8  18.9  NA    16.3  13.8 12.5  11.4   8.41  7.16  5.59  5.67  4.33 #>  8     8  21.8  19.6  19.2  17.1  15.7 14.7  13.1  12.1  11.4  10.5   4.76  4.41 #>  9     9  22.4  19.2  16.6  14.9  NA    9.98  8.14  7.37  4.68  3.66  5.76  4.58 #> 10    10  21.6  19.2  18.7  NA    13.7 12.6   9.61  7.81 NA     5.75 NA     3.97 #> # … with 483 more rows, and 8 more variables: y3 <dbl>, y4 <dbl>, y5 <dbl>, #> #   y6 <dbl>, y7 <dbl>, y8 <dbl>, y9 <dbl>, y10 <dbl>"},{"path":"https://milanwiedemann.github.io/lcsm/reference/select_uni_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Select cases based on minimum number of available session scores on one longitudinal measure — select_uni_cases","title":"Select cases based on minimum number of available session scores on one longitudinal measure — select_uni_cases","text":"Select cases based minimum number available session scores one longitudinal measure","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/select_uni_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select cases based on minimum number of available session scores on one longitudinal measure — select_uni_cases","text":"","code":"select_uni_cases(data, id_var, var_list, min_count, return_id_only = FALSE)"},{"path":"https://milanwiedemann.github.io/lcsm/reference/select_uni_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select cases based on minimum number of available session scores on one longitudinal measure — select_uni_cases","text":"data Dataset wide format. id_var String, specifying id variable. var_list Vector, specifying variable names sequential order. min_count Numeric, specifying minimum number available scores return_id_only Logical, TRUE return ID. needed select_bi_cases","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/select_uni_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select cases based on minimum number of available session scores on one longitudinal measure — select_uni_cases","text":"tibble","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/select_uni_cases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select cases based on minimum number of available session scores on one longitudinal measure — select_uni_cases","text":"","code":"select_uni_cases(data_uni_lcsm,   id_var = \"id\",   var_list = names(data_uni_lcsm)[-1],   min_count = 7 ) #> # A tibble: 335 × 11 #>       id    x1    x2    x3    x4    x5    x6    x7    x8    x9   x10 #>    <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1     1  17.9  NA    16.2  14.7  13.7  12.7  10.6  10.7  8.48 NA    #>  2     3  21.9  20.1  NA    18.6  18.3  16.6  15.9  15.0 13.5  12.5  #>  3     4  22.1  21.3  NA    NA    19.3  19.2  18.4  17.9 17.9  17.0  #>  4     9  NA    21.2  21.7  19.8  NA    NA    17.9  17.7 16.2  15.0  #>  5    10  19.3  NA    18.0  NA    14.9  13.8  12.7  NA   10.6   8.78 #>  6    11  20.3  19.1  18.3  NA    17.3  15.6  14.6  14.2 13.0  12.5  #>  7    12  21.7  NA    22.3  21.7  21.7  21.8  22.0  21.5 NA    21.5  #>  8    13  20.9  20.3  19.7  NA    18.0  16.2  NA    NA   13.3  12.0  #>  9    14  19.9  19.2  18.3  NA    15.7  NA    13.7  12.5 11.7  NA    #> 10    15  NA    20.9  18.5  18.7  17.0  15.3  14.2  14.3 12.8  12.1  #> # … with 325 more rows"},{"path":"https://milanwiedemann.github.io/lcsm/reference/sim_bi_lcsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data from bivariate latent change score model parameter estimates — sim_bi_lcsm","title":"Simulate data from bivariate latent change score model parameter estimates — sim_bi_lcsm","text":"function simulate data bivariate latent change score model parameter estimates using simulateData.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/sim_bi_lcsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data from bivariate latent change score model parameter estimates — sim_bi_lcsm","text":"","code":"sim_bi_lcsm(   timepoints,   model_x,   model_x_param = NULL,   model_y,   model_y_param = NULL,   coupling,   coupling_param = NULL,   sample.nobs = 500,   na_x_pct = 0,   na_y_pct = 0,   seed = NULL,   ...,   var_x = \"x\",   var_y = \"y\",   change_letter_x = \"g\",   change_letter_y = \"j\",   return_lavaan_syntax = FALSE )"},{"path":"https://milanwiedemann.github.io/lcsm/reference/sim_bi_lcsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data from bivariate latent change score model parameter estimates — sim_bi_lcsm","text":"timepoints See specify_bi_lcsm model_x See specify_bi_lcsm model_x_param List, specifying parameter estimates LCSM specified argument 'model_x': gamma_lx1: Mean latent true scores x (Intercept), sigma2_lx1: Variance latent true scores x, sigma2_ux: Variance observed scores x, alpha_g2: Mean change factor (g2), alpha_g3: Mean change factor (g3), sigma2_g2: Variance change factor (g2). sigma2_g3: Variance change factor (g3), sigma_g2lx1: Covariance change factor (g2) initial true score x (lx1), sigma_g3lx1: Covariance change factor (g3) initial true score x (lx1), sigma_g2g3: Covariance change factors (g2 g2), phi_x: Autoregression change scores x. model_y See specify_bi_lcsm model_y_param List, specifying parameter estimates LCSM specified argument 'model_y': gamma_ly1: Mean latent true scores y (Intercept), sigma2_ly1: Variance latent true scores y, sigma2_uy: Variance observed scores y, alpha_j2: Mean change factor (j2), alpha_j3: Mean change factor (j3), sigma2_j2: Variance change factor (j2). sigma2_j3: Variance change factor (j3), sigma_j2ly1: Covariance change factor (j2) initial true score x (ly1), sigma_j3ly1: Covariance change factor (j3) initial true score x (ly1), sigma_j2j3: Covariance change factors (j2 j2), phi_y: Autoregression change scores y. coupling See specify_bi_lcsm coupling_param List, specifying parameter estimates coupling parameters specified argument 'coupling': sigma_su: Covariance residuals x y, sigma_ly1lx1: Covariance intercepts x y, sigma_g2ly1: Covariance change factor x (g2) initial true score y (ly1), sigma_g3ly1: Covariance change factor x (g3) initial true score y (ly1), sigma_j2lx1: Covariance change factor y (j2) initial true score x (lx1), sigma_j3lx1: Covariance change factor y (j3) initial true score x (lx1), sigma_j2g2: Covariance change factors y (j2) x (g2), sigma_j2g3: Covariance change factors y (j2) x (g3), sigma_j3g2: Covariance change factors y (j3) x (g2),, delta_con_xy: Change score x (t) determined true score y (t), delta_con_yx: Change score y (t) determined true score x (t), delta_lag_xy: Change score x (t) determined true score y (t-1), delta_lag_yx: Change score y (t) determined true score x (t-1), xi_con_xy: Change score x (t) determined change score y (t), xi_con_yx: Change score y (t) determined change score x (t), xi_lag_xy: Change score x (t) determined change score y (t-1), xi_lag_yx: Change score y (t) determined change score x (t-1) sample.nobs Numeric, number cases simulated, see specify_uni_lcsm na_x_pct Numeric, percentage random missing values simulated dataset (0 1) na_y_pct Numeric, percentage random missing values simulated dataset (0 1) seed Set seed data simulation, see simulateData ... Arguments passed simulateData var_x See specify_bi_lcsm var_y See specify_bi_lcsm change_letter_x See specify_bi_lcsm change_letter_y See specify_bi_lcsm return_lavaan_syntax Logical, TRUE return lavaan syntax used simulating data. make look beautiful use function cat.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/sim_bi_lcsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data from bivariate latent change score model parameter estimates — sim_bi_lcsm","text":"tibble","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/sim_bi_lcsm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate data from bivariate latent change score model parameter estimates — sim_bi_lcsm","text":"Ghisletta, P., & McArdle, J. J. (2012). Latent Curve Models Latent Change Score Models Estimated R. Structural Equation Modeling: Multidisciplinary Journal, 19(4), 651–682. doi:10.1080/10705511.2012.713275 . Grimm, K. J., Ram, N., & Estabrook, R. (2017). Growth Modeling—Structural Equation Multilevel Modeling Approaches. New York: Guilford Press. Kievit, R. ., Brandmaier, . M., Ziegler, G., van Harmelen, .-L., de Mooij, S. M. M., Moutoussis, M., … Dolan, R. J. (2018). Developmental cognitive neuroscience using latent change score models: tutorial applications. Developmental Cognitive Neuroscience, 33, 99–117. doi:10.1016/j.dcn.2017.11.007 . McArdle, J. J. (2009). Latent variable modeling differences changes longitudinal data. Annual Review Psychology, 60(1), 577–605. doi:10.1146/annurev.psych.60.110707.163612 . Yves Rosseel (2012). lavaan: R Package Structural Equation Modeling. Journal Statistical Software, 48(2), 1-36. doi:10.18637/jss.v048.i02 .","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/sim_bi_lcsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate data from bivariate latent change score model parameter estimates — sim_bi_lcsm","text":"","code":"# Simulate data from bivariate LCSM parameters  sim_bi_lcsm(timepoints = 12,              na_x_pct = .05,             na_y_pct = .1,             model_x = list(alpha_constant = TRUE, beta = TRUE, phi = FALSE),             model_x_param = list(gamma_lx1 = 21,                                  sigma2_lx1 = .5,                                  sigma2_ux = .2,                                  alpha_g2 = -.4,                                  sigma2_g2 = .4,                                  sigma_g2lx1 = .2,                                  beta_x = -.1),             model_y = list(alpha_constant = TRUE, beta = TRUE, phi = TRUE),             model_y_param = list(gamma_ly1 = 5,                                  sigma2_ly1 = .2,                                  sigma2_uy = .2,                                  alpha_j2 = -.2,                                  sigma2_j2 = .1,                                  sigma_j2ly1 = .02,                                  beta_y = -.2,                                  phi_y = .1),             coupling = list(delta_lag_xy = TRUE,                              xi_lag_yx = TRUE),             coupling_param =list(sigma_su = .01,                                  sigma_ly1lx1 = .2,                                  sigma_g2ly1 = .1,                                  sigma_j2lx1 = .1,                                  sigma_j2g2 = .01,                                  delta_lag_xy = .13,                                  xi_lag_yx = .4),             return_lavaan_syntax = FALSE) #> Parameter estimates for the data simulation are taken from the argument 'model_param'. #> All parameter estimates for the LCSM have been specified in the argument 'model_param'. #> # A tibble: 500 × 25 #>       id    x1    x2    x3    x4    x5    x6    x7    x8     x9      x10    x11 #>    <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>    <dbl>  <dbl> #>  1     1  21.3  19.6  17.3  15.1  12.1  9.87  7.75  5.58  3.89   1.78     0.185 #>  2     2  19.9  17.2  14.4  12.1  10.3  7.21  4.69  1.84  0.174 -2.44    -3.25  #>  3     3  20.4  17.4  14.9  12.4  10.4  7.94  5.31  4.10  1.46  -1.14    -1.99  #>  4     4  20.8  20.7  19.4  18.7  17.1 15.3  14.2  12.8  10.9    9.96     8.43  #>  5     5  20.2  18.6  16.7  14.1  11.6 10.3   7.23  4.89  3.62   0.458   -0.172 #>  6     6  20.5  19.9  18.4  16.7  14.9 14.0  11.6  11.2   8.13   7.80     6.60  #>  7     7  20.6  18.6  17.8  16.6  14.9 13.4  NA    10.1   9.78   8.10     6.67  #>  8     8  23.1  21.7  21.7  19.7  19.8 18.9  18.7  17.3  16.2   15.2     15.2   #>  9     9  22.0  19.1  18.4  16.7  14.6 13.6  11.4  10.7   8.37   7.29     5.92  #> 10    10  20.5  18.4  15.5  12.8  10.9  8.23  6.65  3.97 NA     -0.00326 -1.19  #> # … with 490 more rows, and 13 more variables: x12 <dbl>, y1 <dbl>, y2 <dbl>, #> #   y3 <dbl>, y4 <dbl>, y5 <dbl>, y6 <dbl>, y7 <dbl>, y8 <dbl>, y9 <dbl>, #> #   y10 <dbl>, y11 <dbl>, y12 <dbl>"},{"path":"https://milanwiedemann.github.io/lcsm/reference/sim_uni_lcsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data from univariate latent change score model parameter estimates — sim_uni_lcsm","title":"Simulate data from univariate latent change score model parameter estimates — sim_uni_lcsm","text":"function simulate data univariate latent change score model parameter estimates using simulateData.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/sim_uni_lcsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data from univariate latent change score model parameter estimates — sim_uni_lcsm","text":"","code":"sim_uni_lcsm(   timepoints,   model,   model_param = NULL,   var = \"x\",   change_letter = \"g\",   sample.nobs = 500,   na_pct = 0,   seed = NULL,   ...,   return_lavaan_syntax = FALSE )"},{"path":"https://milanwiedemann.github.io/lcsm/reference/sim_uni_lcsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data from univariate latent change score model parameter estimates — sim_uni_lcsm","text":"timepoints See specify_uni_lcsm model See specify_uni_lcsm model_param List, specifying parameter estimates LCSM specified argument 'model' gamma_lx1: Mean latent true scores x (Intercept), sigma2_lx1: Variance latent true scores x, sigma2_ux: Variance observed scores x, alpha_g2: Mean change factor (g2), alpha_g3: Mean change factor (g3), sigma2_g2: Variance constant change factor (g2). sigma2_g3: Variance constant change factor (g3), sigma_g2lx1: Covariance constant change factor (g2) initial true score x (lx1), sigma_g3lx1: Covariance constant change factor (g3) initial true score x (lx1), sigma_g2g3: Covariance change factors (g2 g2), phi_x: Autoregression change scores x. var See specify_uni_lcsm change_letter See specify_uni_lcsm sample.nobs Numeric, number cases simulated, see specify_uni_lcsm na_pct Numeric, percentage random missing values simulated dataset (0 1) seed Set seed data simulation, see simulateData ... Arguments passed simulateData return_lavaan_syntax Logical, TRUE return lavaan syntax used simulating data. make look beautiful use function cat.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/sim_uni_lcsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data from univariate latent change score model parameter estimates — sim_uni_lcsm","text":"tibble","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/sim_uni_lcsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate data from univariate latent change score model parameter estimates — sim_uni_lcsm","text":"","code":"# Simulate data from univariate LCSM parameters  sim_uni_lcsm(timepoints = 10,               model = list(alpha_constant = TRUE, beta = FALSE, phi = TRUE),               model_param = list(gamma_lx1 = 21,                                  sigma2_lx1 = 1.5,                                 sigma2_ux = .2,                                  alpha_g2 = -.93,                                 sigma2_g2 = .1,                                 sigma_g2lx1 = .2,                                 phi_x = .2),              return_lavaan_syntax = FALSE,               sample.nobs = 1000,              na_pct = .3) #> Parameter estimates for the data simulation are taken from the argument 'model_param'. #> All parameter estimates for the LCSM have been specified in the argument 'model_param'. #> # A tibble: 1,000 × 11 #>       id    x1    x2    x3    x4    x5    x6    x7    x8    x9   x10 #>    <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1     1  21.7  NA    22.0  NA    20.4  NA    NA   19.5  18.4  17.9  #>  2     2  19.5  19.1  NA    17.9  16.8  14.9  15.6 14.3  12.9  12.1  #>  3     3  20.0  19.8  18.2  18.5  17.1  15.2  14.0 NA    12.9  12.7  #>  4     4  22.3  21.2  21.2  NA    18.2  17.3  15.8 NA    NA    NA    #>  5     5  21.2  21.3  NA    19.3  NA    18.1  17.0 16.3  15.4  14.3  #>  6     6  21.0  NA    21.3  NA    19.7  19.4  20.0 19.4  NA    17.9  #>  7     7  20.7  19.3  17.0  NA    14.3  12.8  11.0  8.54  7.47  5.66 #>  8     8  21.9  NA    NA    NA    15.8  12.6  12.2 11.3   9.99  8.49 #>  9     9  22.1  21.2  20.5  18.8  19.7  18.6  17.6 NA    16.7  NA    #> 10    10  NA    NA    20.3  19.1  18.3  17.2  14.9 NA    14.4  NA    #> # … with 990 more rows"},{"path":"https://milanwiedemann.github.io/lcsm/reference/specify_bi_lcsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify lavaan model for bivariate latent change score models — specify_bi_lcsm","title":"Specify lavaan model for bivariate latent change score models — specify_bi_lcsm","text":"Specify lavaan model bivariate latent change score models","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/specify_bi_lcsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify lavaan model for bivariate latent change score models — specify_bi_lcsm","text":"","code":"specify_bi_lcsm(   timepoints,   var_x,   model_x,   var_y,   model_y,   coupling,   add = NULL,   change_letter_x = \"g\",   change_letter_y = \"j\" )"},{"path":"https://milanwiedemann.github.io/lcsm/reference/specify_bi_lcsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify lavaan model for bivariate latent change score models — specify_bi_lcsm","text":"timepoints Number timepoints. var_x Vector, specifying variables measuring one construct model. model_x List, specifying model specifications (logical) variables specified var_x. alpha_constant (Constant change factor), alpha_piecewise (Piecewise constant change factors), alpha_piecewise_num (Changepoint piecewise constant change factors), alpha_linear (Linear change factor), beta (Proportional change factor), phi (Autoregression change scores). var_y Vector, specifying variables measuring another construct model. model_y List, specifying model specifications (logical) variables specified var_y. alpha_constant (Constant change factor), alpha_piecewise (Piecewise constant change factors), alpha_piecewise_num (Changepoint piecewise constant change factors), alpha_linear (Linear change factor), beta (Proportional change factor), phi (Autoregression change scores). coupling List, specifying coupling parameters. coupling_piecewise (Piecewise coupling parameters), coupling_piecewise_num (Changepoint piecewise coupling parameters), delta_con_xy (True score y predicting concurrent change score x), delta_lag_xy (True score y predicting subsequent change score x), delta_con_yx (True score x predicting concurrent change score y), delta_lag_yx (True score x predicting subsequent change score y), xi_con_xy (Change score y predicting concurrent change score x), xi_lag_xy (Change score y predicting subsequent change score x), xi_con_yx (Change score x predicting concurrent change score y), xi_lag_yx (Change score x predicting subsequent change score y). add String, lavaan syntax added model change_letter_x String, specifying letter used change factor construct x lavaan syntax. change_letter_y String, specifying letter used change factor construct y lavaan syntax.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/specify_bi_lcsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify lavaan model for bivariate latent change score models — specify_bi_lcsm","text":"Lavaan model syntax including comments.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/specify_bi_lcsm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Specify lavaan model for bivariate latent change score models — specify_bi_lcsm","text":"Ghisletta, P., & McArdle, J. J. (2012). Latent Curve Models Latent Change Score Models Estimated R. Structural Equation Modeling: Multidisciplinary Journal, 19(4), 651–682. doi:doi.org/10.1080/10705511.2012.713275 . Grimm, K. J., Ram, N., & Estabrook, R. (2017). Growth Modeling—Structural Equation Multilevel Modeling Approaches. New York: Guilford Press. McArdle, J. J. (2009). Latent variable modeling differences changes longitudinal data. Annual Review Psychology, 60(1), 577–605. doi:10.1146/annurev.psych.60.110707.163612 . Yves Rosseel (2012). lavaan: R Package Structural Equation Modeling. Journal Statistical Software, 48(2), 1-36. doi:10.18637/jss.v048.i02 .","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/specify_bi_lcsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify lavaan model for bivariate latent change score models — specify_bi_lcsm","text":"","code":"# Specify bivariate LCSM lavaan_bi_lcsm_01 <- specify_bi_lcsm(timepoints = 10,                                       var_x = \"x\",                                      model_x = list(alpha_constant = TRUE,                                                      beta = TRUE,                                                      phi = TRUE),                                      var_y = \"y\",                                        model_y = list(alpha_constant = TRUE,                                                      beta = TRUE,                                                      phi = TRUE),                                        coupling = list(delta_lag_xy = TRUE,                                                       delta_lag_yx = TRUE),                                      change_letter_x = \"g\",                                      change_letter_y = \"j\")  # To look at string simply return the object                                     lavaan_bi_lcsm_01 #> [1] \"# # # # # # # # # # # # # # # # # # # # #\\n# Specify parameters for construct x ----\\n# # # # # # # # # # # # # # # # # # # # #\\n# Specify latent true scores \\nlx1 =~ 1 * x1 \\nlx2 =~ 1 * x2 \\nlx3 =~ 1 * x3 \\nlx4 =~ 1 * x4 \\nlx5 =~ 1 * x5 \\nlx6 =~ 1 * x6 \\nlx7 =~ 1 * x7 \\nlx8 =~ 1 * x8 \\nlx9 =~ 1 * x9 \\nlx10 =~ 1 * x10 \\n# Specify mean of latent true scores \\nlx1 ~ gamma_lx1 * 1 \\nlx2 ~ 0 * 1 \\nlx3 ~ 0 * 1 \\nlx4 ~ 0 * 1 \\nlx5 ~ 0 * 1 \\nlx6 ~ 0 * 1 \\nlx7 ~ 0 * 1 \\nlx8 ~ 0 * 1 \\nlx9 ~ 0 * 1 \\nlx10 ~ 0 * 1 \\n# Specify variance of latent true scores \\nlx1 ~~ sigma2_lx1 * lx1 \\nlx2 ~~ 0 * lx2 \\nlx3 ~~ 0 * lx3 \\nlx4 ~~ 0 * lx4 \\nlx5 ~~ 0 * lx5 \\nlx6 ~~ 0 * lx6 \\nlx7 ~~ 0 * lx7 \\nlx8 ~~ 0 * lx8 \\nlx9 ~~ 0 * lx9 \\nlx10 ~~ 0 * lx10 \\n# Specify intercept of obseved scores \\nx1 ~ 0 * 1 \\nx2 ~ 0 * 1 \\nx3 ~ 0 * 1 \\nx4 ~ 0 * 1 \\nx5 ~ 0 * 1 \\nx6 ~ 0 * 1 \\nx7 ~ 0 * 1 \\nx8 ~ 0 * 1 \\nx9 ~ 0 * 1 \\nx10 ~ 0 * 1 \\n# Specify variance of observed scores \\nx1 ~~ sigma2_ux * x1 \\nx2 ~~ sigma2_ux * x2 \\nx3 ~~ sigma2_ux * x3 \\nx4 ~~ sigma2_ux * x4 \\nx5 ~~ sigma2_ux * x5 \\nx6 ~~ sigma2_ux * x6 \\nx7 ~~ sigma2_ux * x7 \\nx8 ~~ sigma2_ux * x8 \\nx9 ~~ sigma2_ux * x9 \\nx10 ~~ sigma2_ux * x10 \\n# Specify autoregressions of latent variables \\nlx2 ~ 1 * lx1 \\nlx3 ~ 1 * lx2 \\nlx4 ~ 1 * lx3 \\nlx5 ~ 1 * lx4 \\nlx6 ~ 1 * lx5 \\nlx7 ~ 1 * lx6 \\nlx8 ~ 1 * lx7 \\nlx9 ~ 1 * lx8 \\nlx10 ~ 1 * lx9 \\n# Specify latent change scores \\ndx2 =~ 1 * lx2 \\ndx3 =~ 1 * lx3 \\ndx4 =~ 1 * lx4 \\ndx5 =~ 1 * lx5 \\ndx6 =~ 1 * lx6 \\ndx7 =~ 1 * lx7 \\ndx8 =~ 1 * lx8 \\ndx9 =~ 1 * lx9 \\ndx10 =~ 1 * lx10 \\n# Specify latent change scores means \\ndx2 ~ 0 * 1 \\ndx3 ~ 0 * 1 \\ndx4 ~ 0 * 1 \\ndx5 ~ 0 * 1 \\ndx6 ~ 0 * 1 \\ndx7 ~ 0 * 1 \\ndx8 ~ 0 * 1 \\ndx9 ~ 0 * 1 \\ndx10 ~ 0 * 1 \\n# Specify latent change scores variances \\ndx2 ~~ 0 * dx2 \\ndx3 ~~ 0 * dx3 \\ndx4 ~~ 0 * dx4 \\ndx5 ~~ 0 * dx5 \\ndx6 ~~ 0 * dx6 \\ndx7 ~~ 0 * dx7 \\ndx8 ~~ 0 * dx8 \\ndx9 ~~ 0 * dx9 \\ndx10 ~~ 0 * dx10 \\n# Specify constant change factor \\ng2 =~ 1 * dx2 + 1 * dx3 + 1 * dx4 + 1 * dx5 + 1 * dx6 + 1 * dx7 + 1 * dx8 + 1 * dx9 + 1 * dx10 \\n# Specify constant change factor mean \\ng2 ~ alpha_g2 * 1 \\n# Specify constant change factor variance \\ng2 ~~ sigma2_g2 * g2 \\n# Specify constant change factor covariance with the initial true score \\ng2 ~~ sigma_g2lx1 * lx1\\n# Specify proportional change component \\ndx2 ~ beta_x * lx1 \\ndx3 ~ beta_x * lx2 \\ndx4 ~ beta_x * lx3 \\ndx5 ~ beta_x * lx4 \\ndx6 ~ beta_x * lx5 \\ndx7 ~ beta_x * lx6 \\ndx8 ~ beta_x * lx7 \\ndx9 ~ beta_x * lx8 \\ndx10 ~ beta_x * lx9 \\n# Specify autoregression of change score \\ndx3 ~ phi_x * dx2 \\ndx4 ~ phi_x * dx3 \\ndx5 ~ phi_x * dx4 \\ndx6 ~ phi_x * dx5 \\ndx7 ~ phi_x * dx6 \\ndx8 ~ phi_x * dx7 \\ndx9 ~ phi_x * dx8 \\ndx10 ~ phi_x * dx9 \\n# # # # # # # # # # # # # # # # # # # # #\\n# Specify parameters for construct y ----\\n# # # # # # # # # # # # # # # # # # # # #\\n# Specify latent true scores \\nly1 =~ 1 * y1 \\nly2 =~ 1 * y2 \\nly3 =~ 1 * y3 \\nly4 =~ 1 * y4 \\nly5 =~ 1 * y5 \\nly6 =~ 1 * y6 \\nly7 =~ 1 * y7 \\nly8 =~ 1 * y8 \\nly9 =~ 1 * y9 \\nly10 =~ 1 * y10 \\n# Specify mean of latent true scores \\nly1 ~ gamma_ly1 * 1 \\nly2 ~ 0 * 1 \\nly3 ~ 0 * 1 \\nly4 ~ 0 * 1 \\nly5 ~ 0 * 1 \\nly6 ~ 0 * 1 \\nly7 ~ 0 * 1 \\nly8 ~ 0 * 1 \\nly9 ~ 0 * 1 \\nly10 ~ 0 * 1 \\n# Specify variance of latent true scores \\nly1 ~~ sigma2_ly1 * ly1 \\nly2 ~~ 0 * ly2 \\nly3 ~~ 0 * ly3 \\nly4 ~~ 0 * ly4 \\nly5 ~~ 0 * ly5 \\nly6 ~~ 0 * ly6 \\nly7 ~~ 0 * ly7 \\nly8 ~~ 0 * ly8 \\nly9 ~~ 0 * ly9 \\nly10 ~~ 0 * ly10 \\n# Specify intercept of obseved scores \\ny1 ~ 0 * 1 \\ny2 ~ 0 * 1 \\ny3 ~ 0 * 1 \\ny4 ~ 0 * 1 \\ny5 ~ 0 * 1 \\ny6 ~ 0 * 1 \\ny7 ~ 0 * 1 \\ny8 ~ 0 * 1 \\ny9 ~ 0 * 1 \\ny10 ~ 0 * 1 \\n# Specify variance of observed scores \\ny1 ~~ sigma2_uy * y1 \\ny2 ~~ sigma2_uy * y2 \\ny3 ~~ sigma2_uy * y3 \\ny4 ~~ sigma2_uy * y4 \\ny5 ~~ sigma2_uy * y5 \\ny6 ~~ sigma2_uy * y6 \\ny7 ~~ sigma2_uy * y7 \\ny8 ~~ sigma2_uy * y8 \\ny9 ~~ sigma2_uy * y9 \\ny10 ~~ sigma2_uy * y10 \\n# Specify autoregressions of latent variables \\nly2 ~ 1 * ly1 \\nly3 ~ 1 * ly2 \\nly4 ~ 1 * ly3 \\nly5 ~ 1 * ly4 \\nly6 ~ 1 * ly5 \\nly7 ~ 1 * ly6 \\nly8 ~ 1 * ly7 \\nly9 ~ 1 * ly8 \\nly10 ~ 1 * ly9 \\n# Specify latent change scores \\ndy2 =~ 1 * ly2 \\ndy3 =~ 1 * ly3 \\ndy4 =~ 1 * ly4 \\ndy5 =~ 1 * ly5 \\ndy6 =~ 1 * ly6 \\ndy7 =~ 1 * ly7 \\ndy8 =~ 1 * ly8 \\ndy9 =~ 1 * ly9 \\ndy10 =~ 1 * ly10 \\n# Specify latent change scores means \\ndy2 ~ 0 * 1 \\ndy3 ~ 0 * 1 \\ndy4 ~ 0 * 1 \\ndy5 ~ 0 * 1 \\ndy6 ~ 0 * 1 \\ndy7 ~ 0 * 1 \\ndy8 ~ 0 * 1 \\ndy9 ~ 0 * 1 \\ndy10 ~ 0 * 1 \\n# Specify latent change scores variances \\ndy2 ~~ 0 * dy2 \\ndy3 ~~ 0 * dy3 \\ndy4 ~~ 0 * dy4 \\ndy5 ~~ 0 * dy5 \\ndy6 ~~ 0 * dy6 \\ndy7 ~~ 0 * dy7 \\ndy8 ~~ 0 * dy8 \\ndy9 ~~ 0 * dy9 \\ndy10 ~~ 0 * dy10 \\n# Specify constant change factor \\nj2 =~ 1 * dy2 + 1 * dy3 + 1 * dy4 + 1 * dy5 + 1 * dy6 + 1 * dy7 + 1 * dy8 + 1 * dy9 + 1 * dy10 \\n# Specify constant change factor mean \\nj2 ~ alpha_j2 * 1 \\n# Specify constant change factor variance \\nj2 ~~ sigma2_j2 * j2 \\n# Specify constant change factor covariance with the initial true score \\nj2 ~~ sigma_j2ly1 * ly1\\n# Specify proportional change component \\ndy2 ~ beta_y * ly1 \\ndy3 ~ beta_y * ly2 \\ndy4 ~ beta_y * ly3 \\ndy5 ~ beta_y * ly4 \\ndy6 ~ beta_y * ly5 \\ndy7 ~ beta_y * ly6 \\ndy8 ~ beta_y * ly7 \\ndy9 ~ beta_y * ly8 \\ndy10 ~ beta_y * ly9 \\n# Specify autoregression of change score \\ndy3 ~ phi_y * dy2 \\ndy4 ~ phi_y * dy3 \\ndy5 ~ phi_y * dy4 \\ndy6 ~ phi_y * dy5 \\ndy7 ~ phi_y * dy6 \\ndy8 ~ phi_y * dy7 \\ndy9 ~ phi_y * dy8 \\ndy10 ~ phi_y * dy9 \\n# Specify residual covariances \\nx1 ~~ sigma_su * y1 \\nx2 ~~ sigma_su * y2 \\nx3 ~~ sigma_su * y3 \\nx4 ~~ sigma_su * y4 \\nx5 ~~ sigma_su * y5 \\nx6 ~~ sigma_su * y6 \\nx7 ~~ sigma_su * y7 \\nx8 ~~ sigma_su * y8 \\nx9 ~~ sigma_su * y9 \\nx10 ~~ sigma_su * y10 \\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\\n# Specify covariances betweeen specified change components (alpha) and intercepts (initial latent true scores lx1 and ly1) ----\\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\\n# Specify covariance of intercepts \\nlx1 ~~ sigma_ly1lx1 * ly1 \\n# Specify covariance of constant change and intercept between constructs \\nly1 ~~ sigma_g2ly1 * g2 \\n# Specify covariance of constant change and intercept between constructs \\nlx1 ~~ sigma_j2lx1 * j2 \\n# Specify covariance of constant change factors between constructs \\ng2 ~~ sigma_j2g2 * j2 \\n# # # # # # # # # # # # # # # # # # # # # # # # # # #\\n# Specify between-construct coupling parameters ----\\n# # # # # # # # # # # # # # # # # # # # # # # # # # #\\n# Change score x (t) is determined by true score y (t-1)  \\ndx2 ~ delta_lag_xy * ly1 \\ndx3 ~ delta_lag_xy * ly2 \\ndx4 ~ delta_lag_xy * ly3 \\ndx5 ~ delta_lag_xy * ly4 \\ndx6 ~ delta_lag_xy * ly5 \\ndx7 ~ delta_lag_xy * ly6 \\ndx8 ~ delta_lag_xy * ly7 \\ndx9 ~ delta_lag_xy * ly8 \\ndx10 ~ delta_lag_xy * ly9 \\n# Change score y (t) is determined by true score x (t-1)  \\ndy2 ~ delta_lag_yx * lx1 \\ndy3 ~ delta_lag_yx * lx2 \\ndy4 ~ delta_lag_yx * lx3 \\ndy5 ~ delta_lag_yx * lx4 \\ndy6 ~ delta_lag_yx * lx5 \\ndy7 ~ delta_lag_yx * lx6 \\ndy8 ~ delta_lag_yx * lx7 \\ndy9 ~ delta_lag_yx * lx8 \\ndy10 ~ delta_lag_yx * lx9 \\n\"  # To get a readable output use cat() function cat(lavaan_bi_lcsm_01) #> # # # # # # # # # # # # # # # # # # # # # #> # Specify parameters for construct x ---- #> # # # # # # # # # # # # # # # # # # # # # #> # Specify latent true scores  #> lx1 =~ 1 * x1  #> lx2 =~ 1 * x2  #> lx3 =~ 1 * x3  #> lx4 =~ 1 * x4  #> lx5 =~ 1 * x5  #> lx6 =~ 1 * x6  #> lx7 =~ 1 * x7  #> lx8 =~ 1 * x8  #> lx9 =~ 1 * x9  #> lx10 =~ 1 * x10  #> # Specify mean of latent true scores  #> lx1 ~ gamma_lx1 * 1  #> lx2 ~ 0 * 1  #> lx3 ~ 0 * 1  #> lx4 ~ 0 * 1  #> lx5 ~ 0 * 1  #> lx6 ~ 0 * 1  #> lx7 ~ 0 * 1  #> lx8 ~ 0 * 1  #> lx9 ~ 0 * 1  #> lx10 ~ 0 * 1  #> # Specify variance of latent true scores  #> lx1 ~~ sigma2_lx1 * lx1  #> lx2 ~~ 0 * lx2  #> lx3 ~~ 0 * lx3  #> lx4 ~~ 0 * lx4  #> lx5 ~~ 0 * lx5  #> lx6 ~~ 0 * lx6  #> lx7 ~~ 0 * lx7  #> lx8 ~~ 0 * lx8  #> lx9 ~~ 0 * lx9  #> lx10 ~~ 0 * lx10  #> # Specify intercept of obseved scores  #> x1 ~ 0 * 1  #> x2 ~ 0 * 1  #> x3 ~ 0 * 1  #> x4 ~ 0 * 1  #> x5 ~ 0 * 1  #> x6 ~ 0 * 1  #> x7 ~ 0 * 1  #> x8 ~ 0 * 1  #> x9 ~ 0 * 1  #> x10 ~ 0 * 1  #> # Specify variance of observed scores  #> x1 ~~ sigma2_ux * x1  #> x2 ~~ sigma2_ux * x2  #> x3 ~~ sigma2_ux * x3  #> x4 ~~ sigma2_ux * x4  #> x5 ~~ sigma2_ux * x5  #> x6 ~~ sigma2_ux * x6  #> x7 ~~ sigma2_ux * x7  #> x8 ~~ sigma2_ux * x8  #> x9 ~~ sigma2_ux * x9  #> x10 ~~ sigma2_ux * x10  #> # Specify autoregressions of latent variables  #> lx2 ~ 1 * lx1  #> lx3 ~ 1 * lx2  #> lx4 ~ 1 * lx3  #> lx5 ~ 1 * lx4  #> lx6 ~ 1 * lx5  #> lx7 ~ 1 * lx6  #> lx8 ~ 1 * lx7  #> lx9 ~ 1 * lx8  #> lx10 ~ 1 * lx9  #> # Specify latent change scores  #> dx2 =~ 1 * lx2  #> dx3 =~ 1 * lx3  #> dx4 =~ 1 * lx4  #> dx5 =~ 1 * lx5  #> dx6 =~ 1 * lx6  #> dx7 =~ 1 * lx7  #> dx8 =~ 1 * lx8  #> dx9 =~ 1 * lx9  #> dx10 =~ 1 * lx10  #> # Specify latent change scores means  #> dx2 ~ 0 * 1  #> dx3 ~ 0 * 1  #> dx4 ~ 0 * 1  #> dx5 ~ 0 * 1  #> dx6 ~ 0 * 1  #> dx7 ~ 0 * 1  #> dx8 ~ 0 * 1  #> dx9 ~ 0 * 1  #> dx10 ~ 0 * 1  #> # Specify latent change scores variances  #> dx2 ~~ 0 * dx2  #> dx3 ~~ 0 * dx3  #> dx4 ~~ 0 * dx4  #> dx5 ~~ 0 * dx5  #> dx6 ~~ 0 * dx6  #> dx7 ~~ 0 * dx7  #> dx8 ~~ 0 * dx8  #> dx9 ~~ 0 * dx9  #> dx10 ~~ 0 * dx10  #> # Specify constant change factor  #> g2 =~ 1 * dx2 + 1 * dx3 + 1 * dx4 + 1 * dx5 + 1 * dx6 + 1 * dx7 + 1 * dx8 + 1 * dx9 + 1 * dx10  #> # Specify constant change factor mean  #> g2 ~ alpha_g2 * 1  #> # Specify constant change factor variance  #> g2 ~~ sigma2_g2 * g2  #> # Specify constant change factor covariance with the initial true score  #> g2 ~~ sigma_g2lx1 * lx1 #> # Specify proportional change component  #> dx2 ~ beta_x * lx1  #> dx3 ~ beta_x * lx2  #> dx4 ~ beta_x * lx3  #> dx5 ~ beta_x * lx4  #> dx6 ~ beta_x * lx5  #> dx7 ~ beta_x * lx6  #> dx8 ~ beta_x * lx7  #> dx9 ~ beta_x * lx8  #> dx10 ~ beta_x * lx9  #> # Specify autoregression of change score  #> dx3 ~ phi_x * dx2  #> dx4 ~ phi_x * dx3  #> dx5 ~ phi_x * dx4  #> dx6 ~ phi_x * dx5  #> dx7 ~ phi_x * dx6  #> dx8 ~ phi_x * dx7  #> dx9 ~ phi_x * dx8  #> dx10 ~ phi_x * dx9  #> # # # # # # # # # # # # # # # # # # # # # #> # Specify parameters for construct y ---- #> # # # # # # # # # # # # # # # # # # # # # #> # Specify latent true scores  #> ly1 =~ 1 * y1  #> ly2 =~ 1 * y2  #> ly3 =~ 1 * y3  #> ly4 =~ 1 * y4  #> ly5 =~ 1 * y5  #> ly6 =~ 1 * y6  #> ly7 =~ 1 * y7  #> ly8 =~ 1 * y8  #> ly9 =~ 1 * y9  #> ly10 =~ 1 * y10  #> # Specify mean of latent true scores  #> ly1 ~ gamma_ly1 * 1  #> ly2 ~ 0 * 1  #> ly3 ~ 0 * 1  #> ly4 ~ 0 * 1  #> ly5 ~ 0 * 1  #> ly6 ~ 0 * 1  #> ly7 ~ 0 * 1  #> ly8 ~ 0 * 1  #> ly9 ~ 0 * 1  #> ly10 ~ 0 * 1  #> # Specify variance of latent true scores  #> ly1 ~~ sigma2_ly1 * ly1  #> ly2 ~~ 0 * ly2  #> ly3 ~~ 0 * ly3  #> ly4 ~~ 0 * ly4  #> ly5 ~~ 0 * ly5  #> ly6 ~~ 0 * ly6  #> ly7 ~~ 0 * ly7  #> ly8 ~~ 0 * ly8  #> ly9 ~~ 0 * ly9  #> ly10 ~~ 0 * ly10  #> # Specify intercept of obseved scores  #> y1 ~ 0 * 1  #> y2 ~ 0 * 1  #> y3 ~ 0 * 1  #> y4 ~ 0 * 1  #> y5 ~ 0 * 1  #> y6 ~ 0 * 1  #> y7 ~ 0 * 1  #> y8 ~ 0 * 1  #> y9 ~ 0 * 1  #> y10 ~ 0 * 1  #> # Specify variance of observed scores  #> y1 ~~ sigma2_uy * y1  #> y2 ~~ sigma2_uy * y2  #> y3 ~~ sigma2_uy * y3  #> y4 ~~ sigma2_uy * y4  #> y5 ~~ sigma2_uy * y5  #> y6 ~~ sigma2_uy * y6  #> y7 ~~ sigma2_uy * y7  #> y8 ~~ sigma2_uy * y8  #> y9 ~~ sigma2_uy * y9  #> y10 ~~ sigma2_uy * y10  #> # Specify autoregressions of latent variables  #> ly2 ~ 1 * ly1  #> ly3 ~ 1 * ly2  #> ly4 ~ 1 * ly3  #> ly5 ~ 1 * ly4  #> ly6 ~ 1 * ly5  #> ly7 ~ 1 * ly6  #> ly8 ~ 1 * ly7  #> ly9 ~ 1 * ly8  #> ly10 ~ 1 * ly9  #> # Specify latent change scores  #> dy2 =~ 1 * ly2  #> dy3 =~ 1 * ly3  #> dy4 =~ 1 * ly4  #> dy5 =~ 1 * ly5  #> dy6 =~ 1 * ly6  #> dy7 =~ 1 * ly7  #> dy8 =~ 1 * ly8  #> dy9 =~ 1 * ly9  #> dy10 =~ 1 * ly10  #> # Specify latent change scores means  #> dy2 ~ 0 * 1  #> dy3 ~ 0 * 1  #> dy4 ~ 0 * 1  #> dy5 ~ 0 * 1  #> dy6 ~ 0 * 1  #> dy7 ~ 0 * 1  #> dy8 ~ 0 * 1  #> dy9 ~ 0 * 1  #> dy10 ~ 0 * 1  #> # Specify latent change scores variances  #> dy2 ~~ 0 * dy2  #> dy3 ~~ 0 * dy3  #> dy4 ~~ 0 * dy4  #> dy5 ~~ 0 * dy5  #> dy6 ~~ 0 * dy6  #> dy7 ~~ 0 * dy7  #> dy8 ~~ 0 * dy8  #> dy9 ~~ 0 * dy9  #> dy10 ~~ 0 * dy10  #> # Specify constant change factor  #> j2 =~ 1 * dy2 + 1 * dy3 + 1 * dy4 + 1 * dy5 + 1 * dy6 + 1 * dy7 + 1 * dy8 + 1 * dy9 + 1 * dy10  #> # Specify constant change factor mean  #> j2 ~ alpha_j2 * 1  #> # Specify constant change factor variance  #> j2 ~~ sigma2_j2 * j2  #> # Specify constant change factor covariance with the initial true score  #> j2 ~~ sigma_j2ly1 * ly1 #> # Specify proportional change component  #> dy2 ~ beta_y * ly1  #> dy3 ~ beta_y * ly2  #> dy4 ~ beta_y * ly3  #> dy5 ~ beta_y * ly4  #> dy6 ~ beta_y * ly5  #> dy7 ~ beta_y * ly6  #> dy8 ~ beta_y * ly7  #> dy9 ~ beta_y * ly8  #> dy10 ~ beta_y * ly9  #> # Specify autoregression of change score  #> dy3 ~ phi_y * dy2  #> dy4 ~ phi_y * dy3  #> dy5 ~ phi_y * dy4  #> dy6 ~ phi_y * dy5  #> dy7 ~ phi_y * dy6  #> dy8 ~ phi_y * dy7  #> dy9 ~ phi_y * dy8  #> dy10 ~ phi_y * dy9  #> # Specify residual covariances  #> x1 ~~ sigma_su * y1  #> x2 ~~ sigma_su * y2  #> x3 ~~ sigma_su * y3  #> x4 ~~ sigma_su * y4  #> x5 ~~ sigma_su * y5  #> x6 ~~ sigma_su * y6  #> x7 ~~ sigma_su * y7  #> x8 ~~ sigma_su * y8  #> x9 ~~ sigma_su * y9  #> x10 ~~ sigma_su * y10  #> # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #> # Specify covariances betweeen specified change components (alpha) and intercepts (initial latent true scores lx1 and ly1) ---- #> # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #> # Specify covariance of intercepts  #> lx1 ~~ sigma_ly1lx1 * ly1  #> # Specify covariance of constant change and intercept between constructs  #> ly1 ~~ sigma_g2ly1 * g2  #> # Specify covariance of constant change and intercept between constructs  #> lx1 ~~ sigma_j2lx1 * j2  #> # Specify covariance of constant change factors between constructs  #> g2 ~~ sigma_j2g2 * j2  #> # # # # # # # # # # # # # # # # # # # # # # # # # # # #> # Specify between-construct coupling parameters ---- #> # # # # # # # # # # # # # # # # # # # # # # # # # # # #> # Change score x (t) is determined by true score y (t-1)   #> dx2 ~ delta_lag_xy * ly1  #> dx3 ~ delta_lag_xy * ly2  #> dx4 ~ delta_lag_xy * ly3  #> dx5 ~ delta_lag_xy * ly4  #> dx6 ~ delta_lag_xy * ly5  #> dx7 ~ delta_lag_xy * ly6  #> dx8 ~ delta_lag_xy * ly7  #> dx9 ~ delta_lag_xy * ly8  #> dx10 ~ delta_lag_xy * ly9  #> # Change score y (t) is determined by true score x (t-1)   #> dy2 ~ delta_lag_yx * lx1  #> dy3 ~ delta_lag_yx * lx2  #> dy4 ~ delta_lag_yx * lx3  #> dy5 ~ delta_lag_yx * lx4  #> dy6 ~ delta_lag_yx * lx5  #> dy7 ~ delta_lag_yx * lx6  #> dy8 ~ delta_lag_yx * lx7  #> dy9 ~ delta_lag_yx * lx8  #> dy10 ~ delta_lag_yx * lx9"},{"path":"https://milanwiedemann.github.io/lcsm/reference/specify_uni_lcsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify lavaan model for univariate latent change score models — specify_uni_lcsm","title":"Specify lavaan model for univariate latent change score models — specify_uni_lcsm","text":"Specify lavaan model univariate latent change score models","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/specify_uni_lcsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify lavaan model for univariate latent change score models — specify_uni_lcsm","text":"","code":"specify_uni_lcsm(timepoints, var, model, add = NULL, change_letter = \"g\")"},{"path":"https://milanwiedemann.github.io/lcsm/reference/specify_uni_lcsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify lavaan model for univariate latent change score models — specify_uni_lcsm","text":"timepoints Number timepoints. var String, specifying letter used variables (Usually x y). model List model specifications (logical) variables specified variable. alpha_constant: Constant change factor, alpha_piecewise: Piecewise constant change factors, alpha_piecewise_num: Changepoint piecewise constant change factors, alpha_linear: Linear change factor, beta: Proportional change factor, phi: Autoregression change scores. add String, lavaan syntax added model change_letter String, specifying letter used change factor (Usually g j).","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/specify_uni_lcsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify lavaan model for univariate latent change score models — specify_uni_lcsm","text":"Lavaan model syntax including comments.","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/specify_uni_lcsm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Specify lavaan model for univariate latent change score models — specify_uni_lcsm","text":"Ghisletta, P., & McArdle, J. J. (2012). Latent Curve Models Latent Change Score Models Estimated R. Structural Equation Modeling: Multidisciplinary Journal, 19(4), 651–682. doi:10.1080/10705511.2012.713275 . Grimm, K. J., Ram, N., & Estabrook, R. (2017). Growth Modeling—Structural Equation Multilevel Modeling Approaches. New York: Guilford Press. McArdle, J. J. (2009). Latent variable modeling differences changes longitudinal data. Annual Review Psychology, 60(1), 577–605. doi:10.1146/annurev.psych.60.110707.163612 . Yves Rosseel (2012). lavaan: R Package Structural Equation Modeling. Journal Statistical Software, 48(2), 1-36. doi:10.18637/jss.v048.i02 .","code":""},{"path":"https://milanwiedemann.github.io/lcsm/reference/specify_uni_lcsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify lavaan model for univariate latent change score models — specify_uni_lcsm","text":"","code":"# Specify univariate LCSM lavaan_uni_lcsm_01 <- specify_uni_lcsm(timepoints = 10,                                         model = list(alpha_constant = TRUE,                                                      beta = TRUE,                                                      phi = TRUE),                                         var = \"x\",                                          change_letter = \"g\")                   #' # To look at string simply return the object                                     lavaan_uni_lcsm_01 #> [1] \"# Specify latent true scores \\nlx1 =~ 1 * x1 \\nlx2 =~ 1 * x2 \\nlx3 =~ 1 * x3 \\nlx4 =~ 1 * x4 \\nlx5 =~ 1 * x5 \\nlx6 =~ 1 * x6 \\nlx7 =~ 1 * x7 \\nlx8 =~ 1 * x8 \\nlx9 =~ 1 * x9 \\nlx10 =~ 1 * x10 \\n# Specify mean of latent true scores \\nlx1 ~ gamma_lx1 * 1 \\nlx2 ~ 0 * 1 \\nlx3 ~ 0 * 1 \\nlx4 ~ 0 * 1 \\nlx5 ~ 0 * 1 \\nlx6 ~ 0 * 1 \\nlx7 ~ 0 * 1 \\nlx8 ~ 0 * 1 \\nlx9 ~ 0 * 1 \\nlx10 ~ 0 * 1 \\n# Specify variance of latent true scores \\nlx1 ~~ sigma2_lx1 * lx1 \\nlx2 ~~ 0 * lx2 \\nlx3 ~~ 0 * lx3 \\nlx4 ~~ 0 * lx4 \\nlx5 ~~ 0 * lx5 \\nlx6 ~~ 0 * lx6 \\nlx7 ~~ 0 * lx7 \\nlx8 ~~ 0 * lx8 \\nlx9 ~~ 0 * lx9 \\nlx10 ~~ 0 * lx10 \\n# Specify intercept of obseved scores \\nx1 ~ 0 * 1 \\nx2 ~ 0 * 1 \\nx3 ~ 0 * 1 \\nx4 ~ 0 * 1 \\nx5 ~ 0 * 1 \\nx6 ~ 0 * 1 \\nx7 ~ 0 * 1 \\nx8 ~ 0 * 1 \\nx9 ~ 0 * 1 \\nx10 ~ 0 * 1 \\n# Specify variance of observed scores \\nx1 ~~ sigma2_ux * x1 \\nx2 ~~ sigma2_ux * x2 \\nx3 ~~ sigma2_ux * x3 \\nx4 ~~ sigma2_ux * x4 \\nx5 ~~ sigma2_ux * x5 \\nx6 ~~ sigma2_ux * x6 \\nx7 ~~ sigma2_ux * x7 \\nx8 ~~ sigma2_ux * x8 \\nx9 ~~ sigma2_ux * x9 \\nx10 ~~ sigma2_ux * x10 \\n# Specify autoregressions of latent variables \\nlx2 ~ 1 * lx1 \\nlx3 ~ 1 * lx2 \\nlx4 ~ 1 * lx3 \\nlx5 ~ 1 * lx4 \\nlx6 ~ 1 * lx5 \\nlx7 ~ 1 * lx6 \\nlx8 ~ 1 * lx7 \\nlx9 ~ 1 * lx8 \\nlx10 ~ 1 * lx9 \\n# Specify latent change scores \\ndx2 =~ 1 * lx2 \\ndx3 =~ 1 * lx3 \\ndx4 =~ 1 * lx4 \\ndx5 =~ 1 * lx5 \\ndx6 =~ 1 * lx6 \\ndx7 =~ 1 * lx7 \\ndx8 =~ 1 * lx8 \\ndx9 =~ 1 * lx9 \\ndx10 =~ 1 * lx10 \\n# Specify latent change scores means \\ndx2 ~ 0 * 1 \\ndx3 ~ 0 * 1 \\ndx4 ~ 0 * 1 \\ndx5 ~ 0 * 1 \\ndx6 ~ 0 * 1 \\ndx7 ~ 0 * 1 \\ndx8 ~ 0 * 1 \\ndx9 ~ 0 * 1 \\ndx10 ~ 0 * 1 \\n# Specify latent change scores variances \\ndx2 ~~ 0 * dx2 \\ndx3 ~~ 0 * dx3 \\ndx4 ~~ 0 * dx4 \\ndx5 ~~ 0 * dx5 \\ndx6 ~~ 0 * dx6 \\ndx7 ~~ 0 * dx7 \\ndx8 ~~ 0 * dx8 \\ndx9 ~~ 0 * dx9 \\ndx10 ~~ 0 * dx10 \\n# Specify constant change factor \\ng2 =~ 1 * dx2 + 1 * dx3 + 1 * dx4 + 1 * dx5 + 1 * dx6 + 1 * dx7 + 1 * dx8 + 1 * dx9 + 1 * dx10 \\n# Specify constant change factor mean \\ng2 ~ alpha_g2 * 1 \\n# Specify constant change factor variance \\ng2 ~~ sigma2_g2 * g2 \\n# Specify constant change factor covariance with the initial true score \\ng2 ~~ sigma_g2lx1 * lx1\\n# Specify proportional change component \\ndx2 ~ beta_x * lx1 \\ndx3 ~ beta_x * lx2 \\ndx4 ~ beta_x * lx3 \\ndx5 ~ beta_x * lx4 \\ndx6 ~ beta_x * lx5 \\ndx7 ~ beta_x * lx6 \\ndx8 ~ beta_x * lx7 \\ndx9 ~ beta_x * lx8 \\ndx10 ~ beta_x * lx9 \\n# Specify autoregression of change score \\ndx3 ~ phi_x * dx2 \\ndx4 ~ phi_x * dx3 \\ndx5 ~ phi_x * dx4 \\ndx6 ~ phi_x * dx5 \\ndx7 ~ phi_x * dx6 \\ndx8 ~ phi_x * dx7 \\ndx9 ~ phi_x * dx8 \\ndx10 ~ phi_x * dx9 \\n\"  # To get a readable output use cat() function cat(lavaan_uni_lcsm_01) #> # Specify latent true scores  #> lx1 =~ 1 * x1  #> lx2 =~ 1 * x2  #> lx3 =~ 1 * x3  #> lx4 =~ 1 * x4  #> lx5 =~ 1 * x5  #> lx6 =~ 1 * x6  #> lx7 =~ 1 * x7  #> lx8 =~ 1 * x8  #> lx9 =~ 1 * x9  #> lx10 =~ 1 * x10  #> # Specify mean of latent true scores  #> lx1 ~ gamma_lx1 * 1  #> lx2 ~ 0 * 1  #> lx3 ~ 0 * 1  #> lx4 ~ 0 * 1  #> lx5 ~ 0 * 1  #> lx6 ~ 0 * 1  #> lx7 ~ 0 * 1  #> lx8 ~ 0 * 1  #> lx9 ~ 0 * 1  #> lx10 ~ 0 * 1  #> # Specify variance of latent true scores  #> lx1 ~~ sigma2_lx1 * lx1  #> lx2 ~~ 0 * lx2  #> lx3 ~~ 0 * lx3  #> lx4 ~~ 0 * lx4  #> lx5 ~~ 0 * lx5  #> lx6 ~~ 0 * lx6  #> lx7 ~~ 0 * lx7  #> lx8 ~~ 0 * lx8  #> lx9 ~~ 0 * lx9  #> lx10 ~~ 0 * lx10  #> # Specify intercept of obseved scores  #> x1 ~ 0 * 1  #> x2 ~ 0 * 1  #> x3 ~ 0 * 1  #> x4 ~ 0 * 1  #> x5 ~ 0 * 1  #> x6 ~ 0 * 1  #> x7 ~ 0 * 1  #> x8 ~ 0 * 1  #> x9 ~ 0 * 1  #> x10 ~ 0 * 1  #> # Specify variance of observed scores  #> x1 ~~ sigma2_ux * x1  #> x2 ~~ sigma2_ux * x2  #> x3 ~~ sigma2_ux * x3  #> x4 ~~ sigma2_ux * x4  #> x5 ~~ sigma2_ux * x5  #> x6 ~~ sigma2_ux * x6  #> x7 ~~ sigma2_ux * x7  #> x8 ~~ sigma2_ux * x8  #> x9 ~~ sigma2_ux * x9  #> x10 ~~ sigma2_ux * x10  #> # Specify autoregressions of latent variables  #> lx2 ~ 1 * lx1  #> lx3 ~ 1 * lx2  #> lx4 ~ 1 * lx3  #> lx5 ~ 1 * lx4  #> lx6 ~ 1 * lx5  #> lx7 ~ 1 * lx6  #> lx8 ~ 1 * lx7  #> lx9 ~ 1 * lx8  #> lx10 ~ 1 * lx9  #> # Specify latent change scores  #> dx2 =~ 1 * lx2  #> dx3 =~ 1 * lx3  #> dx4 =~ 1 * lx4  #> dx5 =~ 1 * lx5  #> dx6 =~ 1 * lx6  #> dx7 =~ 1 * lx7  #> dx8 =~ 1 * lx8  #> dx9 =~ 1 * lx9  #> dx10 =~ 1 * lx10  #> # Specify latent change scores means  #> dx2 ~ 0 * 1  #> dx3 ~ 0 * 1  #> dx4 ~ 0 * 1  #> dx5 ~ 0 * 1  #> dx6 ~ 0 * 1  #> dx7 ~ 0 * 1  #> dx8 ~ 0 * 1  #> dx9 ~ 0 * 1  #> dx10 ~ 0 * 1  #> # Specify latent change scores variances  #> dx2 ~~ 0 * dx2  #> dx3 ~~ 0 * dx3  #> dx4 ~~ 0 * dx4  #> dx5 ~~ 0 * dx5  #> dx6 ~~ 0 * dx6  #> dx7 ~~ 0 * dx7  #> dx8 ~~ 0 * dx8  #> dx9 ~~ 0 * dx9  #> dx10 ~~ 0 * dx10  #> # Specify constant change factor  #> g2 =~ 1 * dx2 + 1 * dx3 + 1 * dx4 + 1 * dx5 + 1 * dx6 + 1 * dx7 + 1 * dx8 + 1 * dx9 + 1 * dx10  #> # Specify constant change factor mean  #> g2 ~ alpha_g2 * 1  #> # Specify constant change factor variance  #> g2 ~~ sigma2_g2 * g2  #> # Specify constant change factor covariance with the initial true score  #> g2 ~~ sigma_g2lx1 * lx1 #> # Specify proportional change component  #> dx2 ~ beta_x * lx1  #> dx3 ~ beta_x * lx2  #> dx4 ~ beta_x * lx3  #> dx5 ~ beta_x * lx4  #> dx6 ~ beta_x * lx5  #> dx7 ~ beta_x * lx6  #> dx8 ~ beta_x * lx7  #> dx9 ~ beta_x * lx8  #> dx10 ~ beta_x * lx9  #> # Specify autoregression of change score  #> dx3 ~ phi_x * dx2  #> dx4 ~ phi_x * dx3  #> dx5 ~ phi_x * dx4  #> dx6 ~ phi_x * dx5  #> dx7 ~ phi_x * dx6  #> dx8 ~ phi_x * dx7  #> dx9 ~ phi_x * dx8  #> dx10 ~ phi_x * dx9"},{"path":"https://milanwiedemann.github.io/lcsm/news/index.html","id":"lcsm-012","dir":"Changelog","previous_headings":"","what":"lcsm 0.1.2","title":"lcsm 0.1.2","text":"CRAN release: 2020-07-24 Minor changes address new variable names broom package Temporary fix lavInspect error broom, fixed https://github.com/tidymodels/broom/commit/5f584190cc2e6b061b98c9930baaa6c4e6409106/","code":""},{"path":"https://milanwiedemann.github.io/lcsm/news/index.html","id":"lcsm-011","dir":"Changelog","previous_headings":"","what":"lcsm 0.1.1","title":"lcsm 0.1.1","text":"CRAN release: 2020-06-05 Added NEWS.md file track changes package. Submission CRAN","code":""}]
